# Script de d√©ploiement simple sans validations complexes
param(
    [string]$CommitMessage = "Update: D√©ploiement documentation consolid√©e",
    [switch]$SkipTinaCheck
)

Write-Host "üöÄ D√âPLOIEMENT SIMPLE - Documentation Consolid√©e" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan

# √âtape 1: Validation de base
Write-Host "`nüìã Validations de base..." -ForegroundColor Yellow

if (Test-Path "package.json") {
    Write-Host "   ‚úì package.json trouv√©" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå package.json manquant" -ForegroundColor Red
    exit 1
}

if (Test-Path "astro.config.mjs") {
    Write-Host "   ‚úì astro.config.mjs trouv√©" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå astro.config.mjs manquant" -ForegroundColor Red
    exit 1
}

# √âtape 2: Nettoyage et build
Write-Host "`nüèóÔ∏è  Build production..." -ForegroundColor Yellow

if (Test-Path "dist") {
    Remove-Item "dist" -Recurse -Force
    Write-Host "   ‚úì Ancien dist/ supprim√©" -ForegroundColor Green
}

if (Test-Path ".astro") {
    Remove-Item ".astro" -Recurse -Force  
    Write-Host "   ‚úì Cache .astro/ nettoy√©" -ForegroundColor Green
}

Write-Host "   ‚è≥ Lancement build..."
$buildProcess = Start-Process -FilePath "npm" -ArgumentList "run", "build" -NoNewWindow -PassThru -Wait

if ($buildProcess.ExitCode -eq 0) {
    Write-Host "   ‚úì Build r√©ussi" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå √âchec du build" -ForegroundColor Red
    exit 1
}

# √âtape 3: V√©rification build
if (Test-Path "dist/index.html") {
    $distFiles = (Get-ChildItem "dist" -Recurse -File).Count
    Write-Host "   ‚úì $distFiles fichiers g√©n√©r√©s" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå Pas de fichiers de build g√©n√©r√©s" -ForegroundColor Red
    exit 1
}

# √âtape 4: Recherche WinSCP
Write-Host "`nüì§ Pr√©paration upload..." -ForegroundColor Yellow

$winscpPaths = @(
    "C:\Users\robin\AppData\Local\Programs\WinSCP\WinSCP.com",
    "C:\Program Files\WinSCP\WinSCP.com", 
    "C:\Program Files (x86)\WinSCP\WinSCP.com"
)

$winscpPath = $null
foreach ($path in $winscpPaths) {
    if (Test-Path $path) {
        $winscpPath = $path
        Write-Host "   ‚úì WinSCP trouv√©: $path" -ForegroundColor Green
        break
    }
}

if (-not $winscpPath) {
    Write-Host "   ‚ùå WinSCP non trouv√©. Installation requise." -ForegroundColor Red
    Write-Host "   üì• T√©l√©charger: https://winscp.net/download/WinSCP-5.21.7-Setup.exe" -ForegroundColor Yellow
    exit 1
}

# √âtape 5: Upload vers Hostinger
Write-Host "`nüöÄ Upload vers Hostinger..." -ForegroundColor Yellow

$scriptContent = @"
open sftp://u403023291:Robin2024@@147.79.98.140:65002 -hostkey="ssh-ed25519 255 FKFw1lW9IpAUCw7H+V4LOwNRJuPDGJOuMowBxRMlWIY="
synchronize remote -delete dist/ domains/glp1-france.fr/public_html/
exit
"@

$scriptPath = "upload.tmp"
$scriptContent | Out-File -FilePath $scriptPath -Encoding UTF8

try {
    Write-Host "   ‚è≥ Synchronisation en cours..."
    $uploadProcess = Start-Process -FilePath $winscpPath -ArgumentList "/script=$scriptPath" -NoNewWindow -PassThru -Wait
    
    if ($uploadProcess.ExitCode -eq 0) {
        Write-Host "   ‚úì Upload termin√© avec succ√®s" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è  Upload termin√© avec avertissements" -ForegroundColor Yellow
    }
} finally {
    if (Test-Path $scriptPath) {
        Remove-Item $scriptPath -Force
    }
}

# √âtape 6: V√©rification finale
Write-Host "`n‚úÖ V√©rifications finales..." -ForegroundColor Yellow

Write-Host "   üìä Site: https://glp1-france.fr" -ForegroundColor Cyan
Write-Host "   üéõÔ∏è  Admin: https://glp1-france.fr/admin" -ForegroundColor Cyan

Write-Host "`nüéâ D√âPLOIEMENT TERMIN√â !" -ForegroundColor Green
Write-Host "Documentation consolid√©e d√©ploy√©e avec succ√®s." -ForegroundColor Green
