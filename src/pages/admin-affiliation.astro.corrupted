---
import { getCollection } from 'astro:content';

// Variables globales pour l'affiliation
let legacyAffiliateData = null;
let crudAffiliateData = { products: [], deals: [], partners: [], rules: [] };
---

<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Gestion Affiliation - GLP-1 France</title>
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: #f5f5f5;
      color: #333;
      line-height: 1.6;
    }

    .co    function refreshLegacyData() {
      const products = JSON.parse(localStorage.getItem('affiliate_products') || '[]');
      const tbody = document.getElementById('legacy-products-tbody');
      
      if (products.length === 0) {
        tbody.innerHTML = '<tr><td colspan="7" style="text-align: center; color: #6b7280; padding: 2rem;">Aucun produit ajouté</td></tr>';
        return;
      }
      
      tbody.innerHTML = products.map(product => `
        <tr>
          <td>
            <strong>${product.name}</strong>
            <br><small style="color: #6b7280;">${product.description || 'Pas de description'}</small>
          </td>
          <td>${product.brand}</td>
          <td>${product.price}€</td>
          <td><span style="background: #e5e7eb; padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.75rem;">${product.collections.length || 0} collections</span></td>
          <td>${product.priority}</td>
          <td>
            <span style="background: ${product.status === 'active' ? '#dcfce7' : '#fef2f2'}; color: ${product.status === 'active' ? '#166534' : '#dc2626'}; padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.75rem;">
              ${product.status === 'active' ? '✅ Actif' : '❌ Inactif'}
            </span>
          </td>
          <td>
            <button onclick="editProduct('${product.id}')" style="background: #f59e0b; color: white; border: none; padding: 0.25rem 0.5rem; border-radius: 4px; margin-right: 0.25rem; cursor: pointer;">Éditer</button>
            <button onclick="deleteProduct('${product.id}')" style="background: #ef4444; color: white; border: none; padding: 0.25rem 0.5rem; border-radius: 4px; cursor: pointer;">Supprimer</button>
          </td>
        </tr>
      `).join('');
    }

    function loadDeals() {
      const deals = JSON.parse(localStorage.getItem('affiliate_deals') || '[]');
      const tbody = document.getElementById('deals-tbody');
      
      if (deals.length === 0) {
        tbody.innerHTML = '<tr><td colspan="6" style="text-align: center; color: #6b7280; padding: 2rem;">Aucun deal créé</td></tr>';
        return;
      }
      
      tbody.innerHTML = deals.map(deal => `
        <tr>
          <td><strong>${deal.name}</strong></td>
          <td>${deal.partner}</td>
          <td>
            <span style="background: #e5e7eb; padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.75rem;">
              ${deal.type}
            </span>
          </td>
          <td>${deal.value}</td>
          <td>
            <span style="background: ${deal.status === 'active' ? '#dcfce7' : '#fef2f2'}; color: ${deal.status === 'active' ? '#166534' : '#dc2626'}; padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.75rem;">
              ${deal.status === 'active' ? '✅ Actif' : '❌ Inactif'}
            </span>
          </td>
          <td>
            <button onclick="editDeal('${deal.id}')" style="background: #f59e0b; color: white; border: none; padding: 0.25rem 0.5rem; border-radius: 4px; margin-right: 0.25rem; cursor: pointer;">Éditer</button>
            <button onclick="deleteDeal('${deal.id}')" style="background: #ef4444; color: white; border: none; padding: 0.25rem 0.5rem; border-radius: 4px; cursor: pointer;">Supprimer</button>
          </td>
        </tr>
      `).join('');
    }

    function loadPartners() {
      const partners = JSON.parse(localStorage.getItem('affiliate_partners') || '[]');
      const grid = document.getElementById('partners-grid');
      
      if (partners.length === 0) {
        grid.innerHTML = '<div style="grid-column: 1 / -1; text-align: center; color: #6b7280; padding: 2rem;">Aucun partenaire ajouté</div>';
        return;
      }
      
      grid.innerHTML = partners.map(partner => `
        <div style="background: white; border: 1px solid #e5e7eb; border-radius: 8px; padding: 1.5rem; box-shadow: 0 1px 3px rgba(0,0,0,0.1);">
          <div style="display: flex; justify-content: between; align-items: flex-start; margin-bottom: 1rem;">
            <div style="flex: 1;">
              <h4 style="margin: 0 0 0.5rem 0; color: #1f2937;">${partner.name}</h4>
              <p style="margin: 0; color: #6b7280; font-size: 0.875rem;">${partner.category}</p>
            </div>
            <span style="background: ${partner.status === 'active' ? '#dcfce7' : '#fef2f2'}; color: ${partner.status === 'active' ? '#166534' : '#dc2626'}; padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.75rem;">
              ${partner.status === 'active' ? '✅ Actif' : '❌ Inactif'}
            </span>
          </div>
          
          <div style="margin-bottom: 1rem;">
            <p style="margin: 0 0 0.25rem 0; color: #374151; font-size: 0.875rem;"><strong>Site :</strong> <a href="${partner.website}" target="_blank" style="color: #3b82f6;">${partner.website}</a></p>
            <p style="margin: 0 0 0.25rem 0; color: #374151; font-size: 0.875rem;"><strong>Contact :</strong> ${partner.contact}</p>
            <p style="margin: 0; color: #374151; font-size: 0.875rem;"><strong>Commission :</strong> ${partner.commission}</p>
          </div>
          
          <div style="display: flex; gap: 0.5rem;">
            <button onclick="editPartner('${partner.id}')" style="flex: 1; background: #f59e0b; color: white; border: none; padding: 0.5rem; border-radius: 4px; cursor: pointer; font-size: 0.875rem;">Éditer</button>
            <button onclick="deletePartner('${partner.id}')" style="flex: 1; background: #ef4444; color: white; border: none; padding: 0.5rem; border-radius: 4px; cursor: pointer; font-size: 0.875rem;">Supprimer</button>
          </div>
        </div>
      `).join('');
    }

    function deleteProduct(id) {
      if (confirm('Êtes-vous sûr de vouloir supprimer ce produit ?')) {
        const products = JSON.parse(localStorage.getItem('affiliate_products') || '[]');
        const filtered = products.filter(p => p.id !== id);
        localStorage.setItem('affiliate_products', JSON.stringify(filtered));
        showNotification('Produit supprimé', 'success');
        refreshLegacyData();
      }
    }

    function deleteDeal(id) {
      if (confirm('Êtes-vous sûr de vouloir supprimer ce deal ?')) {
        const deals = JSON.parse(localStorage.getItem('affiliate_deals') || '[]');
        const filtered = deals.filter(d => d.id !== id);
        localStorage.setItem('affiliate_deals', JSON.stringify(filtered));
        showNotification('Deal supprimé', 'success');
        loadDeals();
      }
    }

    function deletePartner(id) {
      if (confirm('Êtes-vous sûr de vouloir supprimer ce partenaire ?')) {
        const partners = JSON.parse(localStorage.getItem('affiliate_partners') || '[]');
        const filtered = partners.filter(p => p.id !== id);
        localStorage.setItem('affiliate_partners', JSON.stringify(filtered));
        showNotification('Partenaire supprimé', 'success');
        loadPartners();
      }
    }

    function editProduct(id) {
      showNotification('Fonction d\'édition à implémenter', 'info');
    }

    function editDeal(id) {
      showNotification('Fonction d\'édition à implémenter', 'info');
    }

    function editPartner(id) {
      showNotification('Fonction d\'édition à implémenter', 'info');
    }iner {
      max-width: 1400px;
      margin: 0 auto;
      padding: 20px;
      background: #f8f9fa;
    }

    .header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 30px;
      border-radius: 12px;
      text-align: center;
      margin-bottom: 30px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    }

    .header h1 {
      font-size: 2.5rem;
      margin-bottom: 10px;
      font-weight: 700;
    }

    .header p {
      font-size: 1.1rem;
      opacity: 0.9;
    }

    .back-link {
      display: inline-block;
      margin-bottom: 20px;
      padding: 10px 20px;
      background: #667eea;
      color: white;
      text-decoration: none;
      border-radius: 6px;
      font-weight: 500;
    }

    .back-link:hover {
      background: #5a6fd8;
    }

    /* Tabs système */
    .tabs-container {
      background: white;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
      overflow: hidden;
    }

    .tabs-header {
      display: flex;
      background: #f8f9fa;
      border-bottom: 1px solid #e9ecef;
    }

    .tab-btn {
      flex: 1;
      padding: 15px 20px;
      background: none;
      border: none;
      cursor: pointer;
      font-weight: 500;
      font-size: 16px;
      color: #6c757d;
      transition: all 0.3s ease;
    }

    .tab-btn.active {
      background: white;
      color: #667eea;
      border-bottom: 3px solid #667eea;
    }

    .tab-btn:hover {
      background: #e9ecef;
    }

    .tab-content {
      display: none;
      padding: 30px;
    }

    .tab-content.active {
      display: block;
    }

    /* Sous-onglets */
    .sub-tab-btn {
      background: none;
      border: none;
      padding: 0.75rem 1.5rem;
      cursor: pointer;
      font-weight: 500;
      border-bottom: 2px solid transparent;
      color: #6b7280;
    }

    .sub-tab-btn.active {
      border-bottom-color: #3b82f6;
      color: #3b82f6;
    }

    .sub-tab-content {
      display: none;
    }

    .sub-tab-content.active {
      display: block;
    }

    /* Modal styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.7);
      z-index: 1000;
      overflow-y: auto;
    }

    .modal-content {
      background: white;
      margin: 2rem auto;
      max-width: 800px;
      border-radius: 12px;
      padding: 2rem;
      position: relative;
    }

    .modal-form {
      display: grid;
      gap: 1.5rem;
    }

    .form-group {
      display: flex;
      flex-direction: column;
    }

    .form-group label {
      margin-bottom: 0.5rem;
      font-weight: 500;
      color: #374151;
    }

    .form-group input,
    .form-group textarea,
    .form-group select {
      padding: 0.5rem;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      font-size: 1rem;
    }

    .form-group textarea {
      resize: vertical;
      min-height: 80px;
    }

    .form-actions {
      display: flex;
      gap: 1rem;
      justify-content: flex-end;
      padding-top: 1rem;
      border-top: 1px solid #e5e7eb;
    }

    button {
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-weight: 500;
      font-size: 1rem;
    }

    .btn-primary {
      background: #10b981;
      color: white;
    }

    .btn-secondary {
      background: #6b7280;
      color: white;
    }

    .btn-danger {
      background: #dc2626;
      color: white;
    }

    .table {
      width: 100%;
      border-collapse: collapse;
      background: white;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .table thead {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
    }

    .table th,
    .table td {
      padding: 12px;
      text-align: left;
      border-bottom: 1px solid #eee;
    }

    .table th {
      font-weight: 600;
    }

    .search-bar {
      display: flex;
      gap: 1rem;
      margin-bottom: 1.5rem;
      align-items: center;
    }

    .search-bar input {
      flex: 1;
      padding: 0.5rem;
      border: 1px solid #d1d5db;
      border-radius: 6px;
    }

    .search-bar select {
      padding: 0.5rem;
      border: 1px solid #d1d5db;
      border-radius: 6px;
    }

    .grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1.5rem;
    }

    .card {
      background: white;
      border-radius: 8px;
      padding: 1.5rem;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .notification {
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 1rem 1.5rem;
      border-radius: 6px;
      color: white;
      font-weight: 500;
      z-index: 1001;
      transform: translateX(100%);
      transition: transform 0.3s ease;
    }

    .notification.show {
      transform: translateX(0);
    }

    .notification-success {
      background: #10b981;
    }

    .notification-error {
      background: #dc2626;
    }

    .notification-info {
      background: #3b82f6;
    }
  </style>
</head>
<body>
  <div class="container">
    <a href="/admin-dashboard" class="back-link">← Retour au Dashboard</a>
    
    <div class="header">
      <h1>💰 Gestion Affiliation</h1>
      <p>Administration complète des partenariats et deals</p>
    </div>

    <!-- Système de tabulations -->
    <div class="tabs-container">
      <div class="tabs-header">
        <button class="tab-btn active" data-tab="deals">💰 Deals</button>
        <button class="tab-btn" data-tab="partners">🤝 Partenaires</button>
        <button class="tab-btn" data-tab="rules">📋 Règles & Preview</button>
        <button class="tab-btn" data-tab="legacy">📊 Legacy Products</button>
      </div>

      <!-- TAB: DEALS -->
      <div class="tab-content active" id="tab-deals">
        <div class="search-bar">
          <input type="text" id="deals-search" placeholder="Rechercher des deals...">
          <select id="deals-filter-status">
            <option value="">Tous les statuts</option>
            <option value="active">Actif</option>
            <option value="draft">Brouillon</option>
            <option value="expired">Expiré</option>
            <option value="archived">Archivé</option>
          </select>
          <select id="deals-filter-partner">
            <option value="">Tous les partenaires</option>
            <option value="talika">Talika</option>
            <option value="nutrimuscle">Nutrimuscle</option>
          </select>
          <button onclick="openDealModal()" class="btn-primary">➕ Nouveau Deal</button>
        </div>
        
        <table class="table" id="deals-table">
          <thead>
            <tr>
              <th>Partenaire</th>
              <th>Titre</th>
              <th>Code</th>
              <th>Réduction</th>
              <th>Validité</th>
              <th>Statut</th>
              <th>Priorité</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="deals-tbody">
            <!-- Contenu généré dynamiquement -->
          </tbody>
        </table>
      </div>

      <!-- TAB: PARTENAIRES -->
      <div class="tab-content" id="tab-partners">
        <div class="search-bar">
          <input type="text" id="partners-search" placeholder="Rechercher des partenaires...">
          <button onclick="openPartnerModal()" class="btn-primary">➕ Nouveau Partenaire</button>
        </div>
        
        <div id="partners-grid" class="grid">
          <!-- Contenu généré dynamiquement -->
        </div>
      </div>

      <!-- TAB: RÈGLES & PREVIEW -->
      <div class="tab-content" id="tab-rules">
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem;">
          <!-- Section Règles -->
          <div>
            <h4 style="margin: 0 0 1rem 0; color: #374151;">📋 Règles de Placement</h4>
            <div style="margin-bottom: 1rem;">
              <button onclick="openRuleModal()" class="btn-primary">➕ Nouvelle Règle</button>
            </div>
            <div id="rules-list">
              <!-- Contenu généré dynamiquement -->
            </div>
          </div>
          
          <!-- Section Preview -->
          <div>
            <h4 style="margin: 0 0 1rem 0; color: #374151;">🔍 Prévisualisation</h4>
            <div style="background: #f9fafb; border-radius: 8px; padding: 1.5rem;">
              <div style="margin-bottom: 1rem;">
                <label style="display: block; margin-bottom: 0.5rem; font-weight: 500; color: #374151;">Chemin de test :</label>
                <input type="text" id="preview-path" placeholder="/articles/effets-secondaires-glp1" value="/articles/effets-secondaires-glp1" style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 6px;">
              </div>
              <div style="margin-bottom: 1rem;">
                <label style="display: block; margin-bottom: 0.5rem; font-weight: 500; color: #374151;">Tags :</label>
                <input type="text" id="preview-tags" placeholder="glp1,ozempic,effets-secondaires" value="glp1,effets-secondaires" style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 6px;">
              </div>
              <button onclick="runPreview()" style="background: #f59e0b; color: white; border: none; padding: 0.75rem 1.5rem; border-radius: 6px; cursor: pointer; font-weight: 500; width: 100%;">
                🔍 Prévisualiser
              </button>
              
              <div id="preview-results" style="margin-top: 1.5rem;">
                <!-- Contenu généré dynamiquement -->
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- TAB: LEGACY PRODUCTS -->
      <div class="tab-content" id="tab-legacy">
        <div style="margin-bottom: 1rem;">
          <h3>📊 Produits Legacy</h3>
          <p style="color: #6b7280;">Ancienne gestion des produits d'affiliation</p>
        </div>
        
        <div class="search-bar">
          <button onclick="refreshLegacyData()" class="btn-secondary">🔄 Actualiser</button>
          <button onclick="showAddProductModal()" class="btn-primary">➕ Ajouter Produit</button>
        </div>
        
        <table class="table">
          <thead>
            <tr>
              <th>Produit</th>
              <th>Marque</th>
              <th>Prix</th>
              <th>Collections</th>
              <th>Priorité</th>
              <th>Statut</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="legacy-products-tbody">
            <!-- Contenu généré dynamiquement -->
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- MODALES -->
  
  <!-- Modale Deal -->
  <div id="deal-modal" class="modal">
    <div class="modal-content">
      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
        <h3 style="margin: 0; color: #1f2937;">📝 <span id="deal-modal-title">Nouveau Deal</span></h3>
        <button onclick="closeDealModal()" style="background: none; border: none; font-size: 1.5rem; cursor: pointer; color: #6b7280;">&times;</button>
      </div>
      
      <form id="deal-form" class="modal-form">
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
          <div class="form-group">
            <label>Partenaire *</label>
            <select id="deal-partner" required>
              <option value="">Sélectionner un partenaire</option>
              <option value="talika">Talika</option>
              <option value="nutrimuscle">Nutrimuscle</option>
            </select>
          </div>
          <div class="form-group">
            <label>Statut *</label>
            <select id="deal-status" required>
              <option value="draft">Brouillon</option>
              <option value="active">Actif</option>
              <option value="expired">Expiré</option>
              <option value="archived">Archivé</option>
            </select>
          </div>
        </div>
        
        <div class="form-group">
          <label>Titre du Deal *</label>
          <input type="text" id="deal-title" required placeholder="Ex: Sérum Raffermissant Talika">
        </div>
        
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
          <div class="form-group">
            <label>Code Promo *</label>
            <input type="text" id="deal-code" required placeholder="Ex: GLP1">
          </div>
          <div class="form-group">
            <label>Priorité *</label>
            <input type="number" id="deal-priority" required min="1" max="100" value="50">
          </div>
        </div>
        
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
          <div class="form-group">
            <label>Type de Réduction *</label>
            <select id="deal-discount-type" required>
              <option value="percent">Pourcentage (%)</option>
              <option value="fixed">Montant fixe (€)</option>
            </select>
          </div>
          <div class="form-group">
            <label>Valeur de Réduction *</label>
            <input type="number" id="deal-discount-value" required min="0" step="0.01" placeholder="Ex: 10">
          </div>
        </div>
        
        <div class="form-group">
          <label>URL de Tracking *</label>
          <input type="url" id="deal-tracking-url" required placeholder="https://partenaire.com/product">
        </div>
        
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
          <div class="form-group">
            <label>Date de Début *</label>
            <input type="date" id="deal-valid-from" required>
          </div>
          <div class="form-group">
            <label>Date de Fin *</label>
            <input type="date" id="deal-valid-to" required>
          </div>
        </div>
        
        <div class="form-group">
          <label>Texte du Badge</label>
          <input type="text" id="deal-badge-text" placeholder="Ex: -10% avec GLP1">
        </div>
        
        <div class="form-group">
          <label>Notes de Conformité</label>
          <textarea id="deal-compliance-notes" rows="3" placeholder="Mentions légales, conditions..."></textarea>
        </div>
        
        <div class="form-actions">
          <button type="button" onclick="closeDealModal()" class="btn-secondary">Annuler</button>
          <button type="submit" class="btn-primary">Sauvegarder</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Modale Partenaire -->
  <div id="partner-modal" class="modal">
    <div class="modal-content" style="max-width: 500px;">
      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
        <h3 style="margin: 0; color: #1f2937;">🤝 <span id="partner-modal-title">Nouveau Partenaire</span></h3>
        <button onclick="closePartnerModal()" style="background: none; border: none; font-size: 1.5rem; cursor: pointer; color: #6b7280;">&times;</button>
      </div>
      
      <form id="partner-form" class="modal-form">
        <div class="form-group">
          <label>Nom du Partenaire *</label>
          <input type="text" id="partner-name" required placeholder="Ex: Talika">
        </div>
        
        <div class="form-group">
          <label>Site Web</label>
          <input type="url" id="partner-website" placeholder="https://partenaire.com">
        </div>
        
        <div class="form-group">
          <label>Statut *</label>
          <select id="partner-status" required>
            <option value="active">Actif</option>
            <option value="paused">En Pause</option>
          </select>
        </div>
        
        <div class="form-group">
          <label>Notes</label>
          <textarea id="partner-notes" rows="3" placeholder="Notes internes sur le partenaire..."></textarea>
        </div>
        
        <div class="form-actions">
          <button type="button" onclick="closePartnerModal()" class="btn-secondary">Annuler</button>
          <button type="submit" class="btn-primary">Sauvegarder</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    // === VARIABLES GLOBALES ===
    let crudAffiliateData = { products: [], deals: [], partners: [], rules: [] };
    let legacyAffiliateData = null;
    let currentEditingDeal = null;
    let currentEditingPartner = null;

    // === GESTION DES TABS ===
    function initTabs() {
      const tabBtns = document.querySelectorAll('.tab-btn');
      const tabContents = document.querySelectorAll('.tab-content');
      
      tabBtns.forEach(btn => {
        btn.addEventListener('click', function() {
          const targetTab = this.getAttribute('data-tab');
          
          tabBtns.forEach(b => b.classList.remove('active'));
          tabContents.forEach(c => c.classList.remove('active'));
          
          this.classList.add('active');
          document.getElementById('tab-' + targetTab).classList.add('active');
        });
      });
    }

    // === GESTION DES DEALS ===
    function openDealModal(deal = null) {
      currentEditingDeal = deal;
      const modal = document.getElementById('deal-modal');
      const title = document.getElementById('deal-modal-title');
      
      if (deal) {
        title.textContent = 'Modifier le Deal';
        // Pré-remplir le formulaire avec les données du deal
        document.getElementById('deal-partner').value = deal.partnerId || '';
        document.getElementById('deal-title').value = deal.title || '';
        document.getElementById('deal-code').value = deal.code || '';
        document.getElementById('deal-discount-type').value = deal.discountType || 'percent';
        document.getElementById('deal-discount-value').value = deal.discountValue || '';
        document.getElementById('deal-tracking-url').value = deal.trackingUrl || '';
        document.getElementById('deal-valid-from').value = deal.validFrom?.split('T')[0] || '';
        document.getElementById('deal-valid-to').value = deal.validTo?.split('T')[0] || '';
        document.getElementById('deal-priority').value = deal.priority || 50;
        document.getElementById('deal-status').value = deal.status || 'draft';
        document.getElementById('deal-badge-text').value = deal.assets?.badgeText || '';
        document.getElementById('deal-compliance-notes').value = deal.complianceNotes || '';
      } else {
        title.textContent = 'Nouveau Deal';
        document.getElementById('deal-form').reset();
        
        // Valeurs par défaut
        const today = new Date().toISOString().split('T')[0];
        const nextYear = new Date();
        nextYear.setFullYear(nextYear.getFullYear() + 1);
        document.getElementById('deal-valid-from').value = today;
        document.getElementById('deal-valid-to').value = nextYear.toISOString().split('T')[0];
      }
      
      modal.style.display = 'block';
    }

    function closeDealModal() {
      document.getElementById('deal-modal').style.display = 'none';
      currentEditingDeal = null;
    }

    // === GESTION DES PARTENAIRES ===
    function openPartnerModal(partner = null) {
      currentEditingPartner = partner;
      const modal = document.getElementById('partner-modal');
      const title = document.getElementById('partner-modal-title');
      
      if (partner) {
        title.textContent = 'Modifier le Partenaire';
        document.getElementById('partner-name').value = partner.name || '';
        document.getElementById('partner-website').value = partner.website || '';
        document.getElementById('partner-status').value = partner.status || 'active';
        document.getElementById('partner-notes').value = partner.notes || '';
      } else {
        title.textContent = 'Nouveau Partenaire';
        document.getElementById('partner-form').reset();
      }
      
      modal.style.display = 'block';
    }

    function closePartnerModal() {
      document.getElementById('partner-modal').style.display = 'none';
      currentEditingPartner = null;
    }

    // === FONCTIONS UTILITAIRES ===
    function showNotification(message, type = 'info') {
      const notification = document.createElement('div');
      notification.className = 'notification notification-' + type;
      notification.textContent = message;
      
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.classList.add('show');
      }, 100);
      
      setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
          document.body.removeChild(notification);
        }, 300);
      }, 3000);
    }

    // === FONCTIONS PLACEHOLDER ===
    function refreshLegacyData() {
      showNotification('Données actualisées', 'success');
    }

    function showAddProductModal() {
      // Créer une modale simple pour ajouter un produit
      const modal = document.createElement('div');
      modal.className = 'modal';
      modal.style.display = 'block';
      modal.innerHTML = `
        <div class="modal-content">
          <div class="modal-header">
            <h3>➕ Nouveau Produit</h3>
            <button onclick="this.closest('.modal').remove()" class="modal-close">×</button>
          </div>
          <form id="product-form">
            <div class="form-group">
              <label>Nom du produit :</label>
              <input type="text" id="product-name" required style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 6px;">
            </div>
            <div class="form-group">
              <label>Marque :</label>
              <input type="text" id="product-brand" required style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 6px;">
            </div>
            <div class="form-group">
              <label>Prix :</label>
              <input type="number" id="product-price" step="0.01" required style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 6px;">
            </div>
            <div class="form-group">
              <label>Lien d'affiliation :</label>
              <input type="url" id="product-link" required style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 6px;">
            </div>
            <div class="form-group">
              <label>Description :</label>
              <textarea id="product-description" rows="3" style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 6px;"></textarea>
            </div>
            <div class="modal-footer">
              <button type="button" onclick="this.closest('.modal').remove()" class="btn-secondary">Annuler</button>
              <button type="submit" class="btn-primary">Créer le produit</button>
            </div>
          </form>
        </div>
      `;
      
      document.body.appendChild(modal);
      
      // Gérer la soumission du formulaire
      document.getElementById('product-form').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const product = {
          id: 'prod-' + Date.now(),
          name: document.getElementById('product-name').value,
          brand: document.getElementById('product-brand').value,
          price: parseFloat(document.getElementById('product-price').value),
          link: document.getElementById('product-link').value,
          description: document.getElementById('product-description').value,
          status: 'active',
          priority: 1,
          collections: [],
          created: new Date().toISOString()
        };
        
        // Sauvegarder dans localStorage
        const products = JSON.parse(localStorage.getItem('affiliate_products') || '[]');
        products.push(product);
        localStorage.setItem('affiliate_products', JSON.stringify(products));
        
        showNotification('Produit créé avec succès !', 'success');
        modal.remove();
        refreshLegacyData(); // Actualiser l'affichage
      });
    }

    function openRuleModal() {
      showNotification('Fonction à implémenter', 'info');
    }

    function runPreview() {
      const path = document.getElementById('preview-path').value;
      const tags = document.getElementById('preview-tags').value;
      
      // Simuler une prévisualisation
      const resultsDiv = document.getElementById('preview-results');
      resultsDiv.innerHTML = `
        <div style="border: 1px solid #e5e7eb; border-radius: 8px; padding: 1rem; background: #f9fafb;">
          <h4 style="color: #374151; margin-bottom: 0.5rem;">🔍 Résultat de la prévisualisation</h4>
          <p><strong>Chemin :</strong> ${path}</p>
          <p><strong>Tags :</strong> ${tags}</p>
          <div style="margin-top: 1rem; padding: 0.75rem; background: #fef3c7; border-radius: 6px;">
            <p style="color: #92400e; margin: 0;">💡 <strong>Produits suggérés :</strong> Compléments alimentaires, Balances connectées, Guides nutritionnels</p>
          </div>
        </div>
      `;
    }

    // === GESTION DES FORMULAIRES ===
    document.getElementById('deal-form').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const deal = {
        id: 'deal-' + Date.now(),
        name: document.getElementById('deal-name').value,
        partner: document.getElementById('deal-partner').value,
        type: document.getElementById('deal-type').value,
        value: document.getElementById('deal-value').value,
        status: document.getElementById('deal-status').value,
        startDate: document.getElementById('deal-start').value,
        endDate: document.getElementById('deal-end').value,
        created: new Date().toISOString()
      };
      
      // Sauvegarder dans localStorage
      const deals = JSON.parse(localStorage.getItem('affiliate_deals') || '[]');
      deals.push(deal);
      localStorage.setItem('affiliate_deals', JSON.stringify(deals));
      
      showNotification('Deal créé avec succès !', 'success');
      closeDealModal();
      loadDeals(); // Actualiser l'affichage
    });

    document.getElementById('partner-form').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const partner = {
        id: 'partner-' + Date.now(),
        name: document.getElementById('partner-name').value,
        website: document.getElementById('partner-website').value,
        contact: document.getElementById('partner-contact').value,
        commission: document.getElementById('partner-commission').value,
        status: document.getElementById('partner-status').value,
        category: document.getElementById('partner-category').value,
        created: new Date().toISOString()
      };
      
      // Sauvegarder dans localStorage
      const partners = JSON.parse(localStorage.getItem('affiliate_partners') || '[]');
      partners.push(partner);
      localStorage.setItem('affiliate_partners', JSON.stringify(partners));
      
      showNotification('Partenaire créé avec succès !', 'success');
      closePartnerModal();
      loadPartners(); // Actualiser l'affichage
    });

    // === FERMETURE DES MODALES EN CLIQUANT À L'EXTÉRIEUR ===
    document.querySelectorAll('.modal').forEach(modal => {
      modal.addEventListener('click', function(e) {
        if (e.target === modal) {
          modal.style.display = 'none';
        }
      });
    });

    // === INITIALISATION ===
    document.addEventListener('DOMContentLoaded', function() {
      initTabs();
      
      // Charger toutes les données
      loadDeals();
      loadPartners();
      refreshLegacyData();
      
      showNotification('Page d\'affiliation chargée', 'success');
    });
  </script>
</body>
</html>
