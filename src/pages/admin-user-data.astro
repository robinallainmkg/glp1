---
import BaseLayout from '../layouts/BaseLayout.astro';
import AdminNav from '../components/AdminNav.astro';
---

<BaseLayout title="Données Utilisateurs - Admin GLP-1 France">
  <div class="admin-container">
    <AdminNav currentPage="user-data" />
    
    <main class="admin-main">
      <div class="admin-header">
        <h1>📊 Données Utilisateurs</h1>
        <p class="admin-subtitle">Gestion centralisée des utilisateurs du site</p>
      </div>

      <!-- Loading state -->
      <div id="loading" class="loading-state">
        <div class="loading-spinner"></div>
        <p>Chargement des données utilisateurs...</p>
      </div>

      <!-- Error state -->
      <div id="error" class="alert alert-error" style="display: none;">
        <h3>❌ Erreur</h3>
        <p id="error-message"></p>
      </div>

      <!-- Content -->
      <div id="content" style="display: none;">
        <!-- Statistiques -->
        <div class="stats-grid">
          <div class="stat-card">
            <div class="stat-number" id="total-users">0</div>
            <div class="stat-label">Utilisateurs Total</div>
          </div>
          <div class="stat-card">
            <div class="stat-number" id="newsletter-subscribers">0</div>
            <div class="stat-label">Abonnés Newsletter</div>
          </div>
          <div class="stat-card">
            <div class="stat-number" id="recent-users">0</div>
            <div class="stat-label">Actifs (7 jours)</div>
          </div>
        </div>

        <!-- Tableau des utilisateurs -->
        <div class="table-container">
          <div class="table-header">
            <h2>👥 Liste des Utilisateurs (<span id="user-count">0</span>)</h2>
            <button id="refresh-btn" class="refresh-btn">🔄 Actualiser</button>
          </div>
          
          <div id="empty-state" class="empty-state" style="display: none;">
            <p>📝 Aucun utilisateur enregistré pour le moment</p>
            <small>Les inscriptions à la newsletter et contacts apparaîtront ici</small>
          </div>
          
          <div id="table-wrapper" class="table-wrapper" style="display: none;">
            <table class="users-table">
              <thead>
                <tr>
                  <th>#</th>
                  <th>📧 Email</th>
                  <th>👤 Nom</th>
                  <th>📅 Première visite</th>
                  <th>📅 Dernière activité</th>
                  <th>📈 Événements</th>
                  <th>📮 Newsletter</th>
                  <th>🏷️ Tags</th>
                  <th>🗑️ Actions</th>
                </tr>
              </thead>
              <tbody id="users-tbody">
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </main>
  </div>
</BaseLayout>

<style>
  .admin-container {
    min-height: 100vh;
    background-color: #f8fafc;
  }

  .admin-main {
    margin-left: 280px;
    padding: 2rem;
  }

  .admin-header {
    margin-bottom: 2rem;
  }

  .admin-header h1 {
    font-size: 2rem;
    color: #1e293b;
    margin-bottom: 0.5rem;
  }

  .admin-subtitle {
    color: #64748b;
    font-size: 1.1rem;
  }

  .alert {
    padding: 1rem;
    border-radius: 8px;
    margin-bottom: 1.5rem;
  }

  .alert-error {
    background-color: #fef2f2;
    border: 1px solid #fecaca;
    color: #dc2626;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .stat-card {
    background: white;
    padding: 1.5rem;
    border-radius: 12px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    text-align: center;
  }

  .stat-number {
    font-size: 2.5rem;
    font-weight: bold;
    color: #059669;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    color: #64748b;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .table-container {
    background: white;
    border-radius: 12px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }

  .table-header {
    padding: 1.5rem;
    border-bottom: 1px solid #e2e8f0;
    background: #f8fafc;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .table-header h2 {
    margin: 0;
    color: #1e293b;
    font-size: 1.3rem;
  }

  .refresh-btn {
    background: #059669;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color 0.2s;
  }

  .refresh-btn:hover {
    background: #047857;
  }

  .loading-state {
    text-align: center;
    padding: 3rem;
    color: #64748b;
  }

  .loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #e2e8f0;
    border-top: 4px solid #059669;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 1rem;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .empty-state {
    padding: 3rem;
    text-align: center;
    color: #64748b;
  }

  .empty-state p {
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
  }

  .table-wrapper {
    overflow-x: auto;
  }

  .users-table {
    width: 100%;
    border-collapse: collapse;
  }

  .users-table th {
    background: #f8fafc;
    padding: 1rem;
    text-align: left;
    font-weight: 600;
    color: #374151;
    border-bottom: 1px solid #e2e8f0;
    font-size: 0.9rem;
  }

  .users-table td {
    padding: 1rem;
    border-bottom: 1px solid #f1f5f9;
    vertical-align: top;
  }

  .users-table tr:hover {
    background-color: #f8fafc;
  }

  .email-cell {
    font-family: 'Courier New', monospace;
    color: #059669;
    font-weight: 500;
  }

  .number-cell {
    text-align: center;
    font-weight: 600;
  }

  .status-cell {
    text-align: center;
    font-size: 1.2rem;
  }

  .tags-cell {
    font-size: 0.85rem;
    color: #64748b;
  }

  .actions-cell {
    text-align: center;
    padding: 0.75rem 1rem;
  }

  .delete-btn {
    background: #dc2626;
    color: white;
    border: none;
    border-radius: 6px;
    padding: 0.5rem 0.75rem;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .delete-btn:hover {
    background: #b91c1c;
    transform: scale(1.05);
  }

  .delete-btn:disabled {
    background: #94a3b8;
    cursor: not-allowed;
    transform: none;
  }

  @media (max-width: 768px) {
    .admin-main {
      margin-left: 0;
      padding: 1rem;
    }

    .stats-grid {
      grid-template-columns: 1fr;
    }

    .table-wrapper {
      font-size: 0.85rem;
    }

    .users-table th,
    .users-table td {
      padding: 0.75rem 0.5rem;
    }
  }
</style>

<script>
  // Fonction pour charger les données utilisateurs
  async function loadUsers() {
    console.log('🔄 Début chargement des utilisateurs...');
    
    const loadingEl = document.getElementById('loading');
    const errorEl = document.getElementById('error');
    const contentEl = document.getElementById('content');
    const errorMessageEl = document.getElementById('error-message');
    
    // Affichage du loading
    loadingEl.style.display = 'block';
    errorEl.style.display = 'none';
    contentEl.style.display = 'none';
    
    try {
      const response = await fetch('/api/users.php');
      console.log('📡 Réponse API users:', response.status);
      
      if (!response.ok) {
        throw new Error(`Erreur HTTP: ${response.status}`);
      }
      
      const data = await response.json();
      console.log('📊 Données reçues:', data);
      
      if (!data.success) {
        throw new Error(data.error || 'Erreur inconnue');
      }
      
      // Mise à jour des statistiques
      document.getElementById('total-users').textContent = data.stats.totalUsers;
      document.getElementById('newsletter-subscribers').textContent = data.stats.newsletterSubscribers;
      document.getElementById('recent-users').textContent = data.stats.recentUsers;
      document.getElementById('user-count').textContent = data.stats.totalUsers;
      
      // Affichage des utilisateurs
      const users = data.users || [];
      const tbody = document.getElementById('users-tbody');
      const emptyState = document.getElementById('empty-state');
      const tableWrapper = document.getElementById('table-wrapper');
      
      if (users.length === 0) {
        emptyState.style.display = 'block';
        tableWrapper.style.display = 'none';
      } else {
        emptyState.style.display = 'none';
        tableWrapper.style.display = 'block';
        
        // Génération des lignes du tableau
        tbody.innerHTML = users.map((user, index) => `
          <tr data-user-email="${user.email}">
            <td>${index + 1}</td>
            <td class="email-cell">${user.email || '-'}</td>
            <td>${user.name || '-'}</td>
            <td>${user.firstSeen ? new Date(user.firstSeen).toLocaleDateString('fr-FR') : '-'}</td>
            <td>${user.lastSeen ? new Date(user.lastSeen).toLocaleDateString('fr-FR') : '-'}</td>
            <td class="number-cell">${user.totalEvents || 0}</td>
            <td class="status-cell">
              ${user.isNewsletterSubscriber ? '✅' : '❌'}
            </td>
            <td class="tags-cell">
              ${user.tags && user.tags.length > 0 ? user.tags.join(', ') : '-'}
            </td>
            <td class="actions-cell">
              <button class="delete-btn" onclick="deleteUser('${user.email}')" title="Supprimer ${user.email}">
                🗑️
              </button>
            </td>
          </tr>
        `).join('');
      }
      
      // Affichage du contenu
      loadingEl.style.display = 'none';
      contentEl.style.display = 'block';
      
      console.log('✅ Utilisateurs chargés avec succès');
      
    } catch (error) {
      console.error('❌ Erreur chargement utilisateurs:', error);
      
      errorMessageEl.textContent = error.message;
      loadingEl.style.display = 'none';
      errorEl.style.display = 'block';
    }
  }
  
  // Fonction pour supprimer un utilisateur
  async function deleteUser(email) {
    if (!email) {
      alert('❌ Email manquant pour la suppression');
      return;
    }
    
    // Confirmation
    const userName = document.querySelector(`tr[data-user-email="${email}"] td:nth-child(3)`).textContent;
    const confirmMessage = `⚠️ Confirmer la suppression ?\n\nUtilisateur: ${userName}\nEmail: ${email}\n\nCette action est irréversible.`;
    
    if (!confirm(confirmMessage)) {
      return;
    }
    
    console.log('🗑️ Suppression utilisateur:', email);
    
    // Désactiver le bouton pendant la suppression
    const deleteBtn = document.querySelector(`button[onclick="deleteUser('${email}')"]`);
    if (deleteBtn) {
      deleteBtn.disabled = true;
      deleteBtn.innerHTML = '⏳';
    }
    
    try {
      const response = await fetch('/api/delete-user.php', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email: email })
      });
      
      const result = await response.json();
      
      if (response.ok && result.success) {
        console.log('✅ Utilisateur supprimé:', email);
        alert(`✅ Utilisateur ${email} supprimé avec succès`);
        
        // Recharger la liste
        loadUsers();
      } else {
        throw new Error(result.error || 'Erreur lors de la suppression');
      }
    } catch (error) {
      console.error('❌ Erreur suppression:', error);
      alert(`❌ Erreur lors de la suppression: ${error.message}`);
      
      // Réactiver le bouton
      if (deleteBtn) {
        deleteBtn.disabled = false;
        deleteBtn.innerHTML = '🗑️';
      }
    }
  }
  
  // Exposer la fonction globalement pour les onclick
  window.deleteUser = deleteUser;
  
  // Chargement initial
  document.addEventListener('DOMContentLoaded', () => {
    console.log('🚀 Page admin-user-data chargée');
    loadUsers();
    
    // Bouton refresh
    const refreshBtn = document.getElementById('refresh-btn');
    if (refreshBtn) {
      refreshBtn.addEventListener('click', () => {
        console.log('🔄 Actualisation manuelle demandée');
        loadUsers();
      });
    }
  });
</script>
