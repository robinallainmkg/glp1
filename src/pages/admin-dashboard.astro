---
import { getCollection } from 'astro:content';
import AdminNav from '../components/AdminNav.astro';
import pertinenceReport from '../../pertinence-content-report.json';

// === DONN√âES STATISTIQUES ===
function countWords(text) {
  if (!text) return 0;
  return text
    .replace(/`{3}[\s\S]*?`{3}/g, ' ')
    .replace(/`[^`]*`/g, ' ')
    .replace(/<[^>]+>/g, ' ')
    .split(/\s+/)
    .filter(Boolean)
    .length;
}

function countOccurrences(text, keyword) {
  if (!keyword) return 0;
  const escaped = keyword.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&');
  const regex = new RegExp(`\\b${escaped}\\b`, 'gi');
  return (text.match(regex) || []).length;
}

function countHeadings(md, level) {
  const hashes = '#'.repeat(level);
  const regex = new RegExp(`^${hashes}\\s+.+`, 'gm');
  return (md.match(regex) || []).length;
}

function hasMedicalDisclaimer(md) {
  const disclaimerKeywords = ['avis m√©dical', 'professionnel de sant√©', 'm√©decin', 'consultation', 'prescription'];
  return disclaimerKeywords.some(keyword => md.toLowerCase().includes(keyword));
}

function analyzeInterlinks(md) {
  const internalLinks = md.match(/\[([^\]]+)\]\(\/[^)]*\)/g) || [];
  const similarLinksSection = md.includes('## Articles similaires') || md.includes('## Ressources compl√©mentaires');
  const contentSections = md.split('## Articles similaires')[0] || md;
  const contentLinks = contentSections.match(/\[([^\]]+)\]\(\/[^)]*\)/g) || [];
  
  return {
    total: internalLinks.length,
    inContent: contentLinks.length,
    hasSimilarSection: similarLinksSection,
    isOptimal: internalLinks.length >= 5 && internalLinks.length <= 15 && contentLinks.length >= 2
  };
}

function calculateSEOScore(md, wordCount, mainKeyword, mainKeywordDensity, interlinks) {
  let score = 0;
  const details = [];
  
  if (countHeadings(md, 1) === 1) {
    score += 10;
    details.push("‚úì Un seul H1");
  } else {
    details.push("‚úó Probl√®me H1");
  }
  
  if (countHeadings(md, 2) >= 3) {
    score += 10;
    details.push("‚úì Structure H2 suffisante");
  } else {
    details.push("‚úó Manque de H2");
  }
  
  if (wordCount >= 1000) {
    score += 15;
    details.push("‚úì Contenu substantiel (1000+ mots)");
  } else if (wordCount >= 500) {
    score += 10;
    details.push("‚ö† Contenu moyen (500+ mots)");
  } else {
    details.push("‚úó Contenu insuffisant");
  }
  
  if (parseFloat(mainKeywordDensity) >= 1 && parseFloat(mainKeywordDensity) <= 2.5) {
    score += 10;
    details.push("‚úì Densit√© mots-cl√©s optimale");
  } else if (parseFloat(mainKeywordDensity) > 0) {
    score += 8;
    details.push("‚ö† Densit√© mots-cl√©s √† ajuster");
  } else {
    details.push("‚úó Pas de mot-cl√© principal");
  }
  
  if (hasMedicalDisclaimer(md)) {
    score += 5;
    details.push("‚úì Disclaimer m√©dical");
  } else {
    details.push("‚úó Manque disclaimer");
  }
  
  if (interlinks.isOptimal) {
    score += 15;
    details.push("‚úì Interlinks optimaux");
  } else if (interlinks.total >= 3) {
    score += 10;
    details.push("‚ö† Interlinks corrects");
  } else {
    details.push("‚úó Manque d'interlinks");
  }
  
  return { score: Math.min(score, 100), details };
}

// === COLLECTE DES DONN√âES ===
const collectionNames = [
  'alternatives-glp1',
  'glp1-perte-de-poids', 
  'effets-secondaires-glp1',
  'glp1-cout',
  'glp1-diabete',
  'medecins-glp1-france',
  'medicaments-glp1',
  'recherche-glp1',
  'regime-glp1'
];

const allEntries = [];
for (const name of collectionNames) {
  try {
    const entries = await getCollection(name);
    allEntries.push(...entries.map(e => ({ ...e, _collection: name })));
  } catch (e) {
    // ignore missing collection
  }
}

const reportMap = {};
pertinenceReport.articles.forEach(a => {
  const slug = a.filePath.replace(/^src\/content\//, '').replace(/\.md$/, '').split('/').pop();
  reportMap[slug] = a;
});

const detailedStats = allEntries.map(article => {
  const md = article.body || '';
  const wordCount = countWords(md);
  const mainKeyword = article.data.mainKeyword || 'glp1';
  const mainKeywordOccurrences = countOccurrences(md, mainKeyword);
  const mainKeywordDensity = wordCount > 0 ? ((mainKeywordOccurrences / wordCount) * 100).toFixed(2) : '0';
  
  const interlinks = analyzeInterlinks(md);
  const seoAnalysis = calculateSEOScore(md, wordCount, mainKeyword, mainKeywordDensity, interlinks);
  
  const report = reportMap[article.slug] || {};
  
  return {
    collection: article._collection,
    slug: article.slug,
    title: article.data.title || 'Sans titre',
    wordCount,
    h1Count: countHeadings(md, 1),
    h2Count: countHeadings(md, 2),
    interlinks,
    internalLinksCount: interlinks.total,
    seoScore: report.seoScore ?? seoAnalysis.score,
    seoDetails: report.seoDetails ?? seoAnalysis.details,
    pertinenceScore: report.pertinenceScore ?? 0,
    pertinenceDetails: report.pertinenceDetails ?? [],
    isEmpty: wordCount < 200
  };
});

const totalArticles = detailedStats.length;
const emptyArticles = detailedStats.filter(s => s.isEmpty).length;
const lastUpdate = new Date(pertinenceReport.timestamp).toLocaleString('fr-FR', { dateStyle: 'long', timeStyle: 'short' });
---

<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard Admin - GLP-1 France</title>
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: #f5f5f5;
      color: #333;
      line-height: 1.6;
    }

    .container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 20px; 
    }

    .header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 30px;
      border-radius: 12px;
      text-align: center;
      margin-bottom: 30px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    }

    .header h1 {
      font-size: 2.5rem;
      margin-bottom: 10px;
      font-weight: 700;
    }

    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }

    .stat-card {
      background: white;
      padding: 25px;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
      text-align: center;
    }

    .stat-number {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 10px;
    }

    .stat-number.red { color: #dc3545; }
    .stat-number.green { color: #28a745; }

    .stat-label {
      font-size: 1rem;
      color: #6c757d;
      font-weight: 500;
    }

    .tabs-container {
      background: white;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
      overflow: hidden;
    }

    .tabs-header {
      display: flex;
      background: #f8f9fa;
      border-bottom: 1px solid #e9ecef;
    }

    .tab-btn {
      flex: 1;
      padding: 15px 20px;
      background: none;
      border: none;
      cursor: pointer;
      font-weight: 500;
      font-size: 16px;
      color: #6c757d;
      transition: all 0.3s ease;
      text-decoration: none;
      display: block;
      text-align: center;
    }

    .tab-btn.active {
      background: white;
      color: #667eea;
      border-bottom: 3px solid #667eea;
    }

    .tab-btn:hover {
      background: #e9ecef;
    }

    .tab-content {
      display: none;
      padding: 30px;
    }

    .tab-content.active {
      display: block;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      background: white;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    table thead {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
    }

    table th,
    table td {
      padding: 10px;
      text-align: left;
      border-bottom: 1px solid #eee;
    }

    table tr:hover {
      background: #f8f9fa;
    }

    .roadmap-phase {
      margin-bottom: 30px;
      padding: 25px;
      border-radius: 12px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
  </style>
</head>
<body>
  <AdminNav />
  
  <div class="container">
    <div class="header">
      <h1>üè• Dashboard Prot√©g√© - GLP-1 France</h1>
      <p>Monitoring complet ‚Ä¢ SEO ‚Ä¢ Mon√©tisation</p>
      <p style="margin-top:10px; color:#ffc107;">Derni√®re mise √† jour : {lastUpdate}</p>
    </div>

    <div class="stats-grid">
      <div class="stat-card">
        <div class="stat-number">{totalArticles}</div>
        <div class="stat-label">Articles total</div>
      </div>
      <div class="stat-card">
        <div class="stat-number red">{emptyArticles}</div>
        <div class="stat-label">Articles vides</div>
      </div>
      <div class="stat-card">
        <div class="stat-number green">{totalArticles - emptyArticles}</div>
        <div class="stat-label">Articles publi√©s</div>
      </div>
    </div>

    <div class="tabs-container">
      <div class="tabs-header">
        <button class="tab-btn active" data-tab="articles">üìù Articles</button>
        <button class="tab-btn" data-tab="roadmap">üöÄ Roadmap</button>
        <a href="/admin-affiliation" class="tab-btn">üí∞ Affiliation</a>
      </div>

      <div class="tab-content active" id="tab-articles">
        <h3>üìù Tous les Articles ({totalArticles})</h3>
        <div style="overflow-x: auto;">
          <table>
            <thead>
              <tr>
                <th>Article</th>
                <th>Collection</th>
                <th>Mots</th>
                <th>H1</th>
                <th>H2</th>
                <th>Liens Int.</th>
                <th>Score SEO</th>
                <th>Score Pertinence</th>
                <th>Action</th>
              </tr>
            </thead>
            <tbody>
              {detailedStats
                .sort((a, b) => {
                  if (a.isEmpty && !b.isEmpty) return -1;
                  if (!a.isEmpty && b.isEmpty) return 1;
                  return a.seoScore - b.seoScore;
                })
                .map(article => (
                <tr>
                  <td>
                    <strong>{article.title.length > 40 ? article.title.substring(0, 40) + '...' : article.title}</strong>
                    <br />
                    <small style="color: #666;">/{article.collection}/{article.slug}</small>
                  </td>
                  <td style="font-size: 12px;">{article.collection.replace('glp1-', '').replace('-', ' ')}</td>
                  <td>
                    <span style={`color: ${article.wordCount >= 1000 ? '#28a745' : article.wordCount >= 500 ? '#ffc107' : '#dc3545'}`}>
                      {article.wordCount}
                    </span>
                  </td>
                  <td>
                    <span style={`color: ${article.h1Count === 1 ? '#28a745' : '#dc3545'}`}>
                      {article.h1Count}
                    </span>
                  </td>
                  <td>
                    <span style={`color: ${article.h2Count >= 3 ? '#28a745' : article.h2Count >= 1 ? '#ffc107' : '#dc3545'}`}>
                      {article.h2Count}
                    </span>
                  </td>
                  <td>
                    <span style={`color: ${article.internalLinksCount >= 5 ? '#28a745' : article.internalLinksCount >= 2 ? '#ffc107' : '#dc3545'}`}>
                      {article.internalLinksCount}
                    </span>
                  </td>
                  <td>
                    <span style={`font-weight: bold; color: ${article.seoScore >= 80 ? '#28a745' : article.seoScore >= 60 ? '#ffc107' : '#dc3545'}`}>
                      {article.seoScore}/100
                    </span>
                  </td>
                  <td>
                    <span style={`font-weight: bold; color: ${article.pertinenceScore >= 80 ? '#28a745' : article.pertinenceScore >= 60 ? '#ffc107' : '#dc3545'}`}>
                      {article.pertinenceScore}/100
                    </span>
                  </td>
                  <td>
                    <a href={`/${article.collection}/${article.slug}`} target="_blank" 
                       style="display: inline-block; padding: 6px 16px; background: #667eea; color: white; border-radius: 6px; text-decoration: none; font-weight: 500;">
                      Voir
                    </a>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      <div class="tab-content" id="tab-roadmap">
        <h3>üöÄ Roadmap - Affiliation et Mon√©tisation</h3>
        
        <div class="roadmap-phase" style="border-left: 5px solid #667eea; background: #f8f9ff;">
          <h4 style="color: #667eea;">üìã Phase 1 : Affiliation</h4>
          <p><strong>Objectif :</strong> Int√©grer des partenariats d'affiliation pertinents</p>
          <ul style="margin-top: 15px;">
            <li>Plateformes d'affiliation (Amazon, CJ Affiliate, ShareASale)</li>
            <li>Sites de cosm√©tiques et bien-√™tre (Sephora, Douglas)</li>
            <li>Compl√©ments alimentaires (Nutrimea, Biovancia)</li>
            <li>Pharmacies en ligne (Doctipharma, PharmashopDiscount)</li>
          </ul>
        </div>

        <div class="roadmap-phase" style="border-left: 5px solid #28a745; background: #f8fff8;">
          <h4 style="color: #28a745;">üìß Phase 2 : Collecte de Donn√©es</h4>
          <p><strong>Objectif :</strong> Constituer une base de donn√©es qualifi√©e</p>
          <ul style="margin-top: 15px;">
            <li>Newsletter footer (existant - √† optimiser)</li>
            <li>Pop-up d'inscription strat√©gique</li>
            <li>Formulaire de t√©l√©chargement du guide PDF</li>
            <li>Quiz interactifs sur les traitements</li>
          </ul>
        </div>

        <div class="roadmap-phase" style="border-left: 5px solid #ffc107; background: #fffef8;">
          <h4 style="color: #f39c12;">üìñ Phase 3 : Guide PDF</h4>
          <p><strong>Objectif :</strong> Cr√©er un guide de r√©f√©rence A-Z pour traiter les effets secondaires</p>
          <ul style="margin-top: 15px;">
            <li>Classification des effets secondaires par gravit√©</li>
            <li>Solutions naturelles et m√©dicamenteuses</li>
            <li>Protocoles de gestion par sympt√¥me</li>
            <li>Lead magnet pour collecte d'emails</li>
          </ul>
        </div>

        <div class="roadmap-phase" style="border-left: 5px solid #dc3545; background: #fff8f8;">
          <h4 style="color: #dc3545;">üè• Phase 4 : Annuaire de Professionnels</h4>
          <p><strong>Objectif :</strong> Cr√©er un annuaire complet des professionnels de sant√© sp√©cialis√©s</p>
          <ul style="margin-top: 15px;">
            <li>Endocrinologues par ville/d√©partement/r√©gion</li>
            <li>Cliniques sp√©cialis√©es en ob√©sit√©</li>
            <li>Centres de diab√©tologie</li>
            <li>R√©f√©rencement payant des professionnels</li>
          </ul>
        </div>

        <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 25px; border-radius: 8px; text-align: center;">
          <h4>üéØ Objectifs de Revenus</h4>
          <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-top: 20px;">
            <div>
              <div style="font-size: 2em; font-weight: bold;">1000‚Ç¨</div>
              <div>Mois 1-3 (Affiliation)</div>
            </div>
            <div>
              <div style="font-size: 2em; font-weight: bold;">3000‚Ç¨</div>
              <div>Mois 4-6 (Guide + Base)</div>
            </div>
            <div>
              <div style="font-size: 2em; font-weight: bold;">5000‚Ç¨</div>
              <div>Mois 7-12 (Annuaire)</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    function initTabs() {
      const tabBtns = document.querySelectorAll('.tab-btn');
      const tabContents = document.querySelectorAll('.tab-content');
      
      tabBtns.forEach(btn => {
        if (btn.getAttribute('href')) return;
        
        btn.addEventListener('click', function() {
          const targetTab = this.getAttribute('data-tab');
          
          tabBtns.forEach(b => b.classList.remove('active'));
          tabContents.forEach(c => c.classList.remove('active'));
          
          this.classList.add('active');
          document.getElementById('tab-' + targetTab).classList.add('active');
        });
      });
    }

    document.addEventListener('DOMContentLoaded', function() {
      initTabs();
    });
  </script>
</body>
</html>
