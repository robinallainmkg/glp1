---
import { getCollection } from 'astro:content';

// === FONCTIONS D'ANALYSE ===
function countWords(text) {
  if (!text) return 0;
  return text
    .replace(/`{3}[\s\S]*?`{3}/g, ' ')
    .replace(/`[^`]*`/g, ' ')
    .replace(/<[^>]+>/g, ' ')
    .split(/\s+/)
    .filter(Boolean)
    .length;
}

function countOccurrences(text, keyword) {
  if (!keyword) return 0;
  const escaped = keyword.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&');
  const regex = new RegExp(`\\b${escaped}\\b`, 'gi');
  return (text.match(regex) || []).length;
}

function countHeadings(md, level) {
  const hashes = '#'.repeat(level);
  const regex = new RegExp(`^${hashes}\\s+.+`, 'gm');
  return (md.match(regex) || []).length;
}

function hasKeywordInHeading(md, keyword, level) {
  if (!keyword) return false;
  const hashes = '#'.repeat(level);
  const regex = new RegExp(`^${hashes}\\s+.*${keyword.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&')}.*`, 'gim');
  return regex.test(md);
}

function hasMedicalDisclaimer(md) {
  const disclaimerKeywords = ['avis m√©dical', 'professionnel de sant√©', 'm√©decin', 'consultation', 'prescription'];
  return disclaimerKeywords.some(keyword => md.toLowerCase().includes(keyword));
}

function hasInternalLinks(md) {
  const internalLinks = md.match(/\[([^\]]+)\]\(\/[^)]*\)/g) || [];
  return internalLinks.length;
}

// === COLLECTE DES DONN√âES ===
const collectionNames = [
  'alternatives-glp1',
  'glp1-perte-de-poids', 
  'effets-secondaires-glp1',
  'glp1-cout',
  'glp1-diabete',
  'medecins-glp1-france',
  'medicaments-glp1',
  'recherche-glp1',
  'regime-glp1'
];

const allEntries = [];
for (const name of collectionNames) {
  try {
    const entries = await getCollection(name);
    allEntries.push(...entries.map(e => ({ ...e, _collection: name })));
  } catch (e) {
    // ignore missing collection
  }
}

// Analyse de chaque article
const detailedStats = allEntries.map(article => {
  const md = article.body || '';
  const text = md.replace(/![^\n]*\n?/g, ' ')
                 .replace(/\[[^\]]*\]\([^)]*\)/g, ' ')
                 .replace(/<[^>]+>/g, ' ');

  const wordCount = countWords(text);
  const mainKeyword = article.data.mainKeyword || '';
  
  const mainKeywordCount = countOccurrences(text, mainKeyword);
  const mainKeywordDensity = mainKeyword ? 
    ((mainKeywordCount / Math.max(wordCount, 1)) * 100).toFixed(2) : '0.00';

  // Score SEO
  let score = 0;
  if (countHeadings(md, 1) === 1) score += 20;
  if (countHeadings(md, 2) >= 3) score += 15;
  if (wordCount >= 1000) score += 20;
  if (parseFloat(mainKeywordDensity) >= 1 && parseFloat(mainKeywordDensity) <= 2) score += 20;
  if (hasMedicalDisclaimer(md)) score += 10;
  if (hasInternalLinks(md) >= 3) score += 15;

  return {
    collection: article._collection,
    slug: article.slug,
    title: article.data.title || 'Sans titre',
    wordCount,
    mainKeyword,
    mainKeywordDensity: parseFloat(mainKeywordDensity),
    h1Count: countHeadings(md, 1),
    h2Count: countHeadings(md, 2),
    hasMedicalDisclaimer: hasMedicalDisclaimer(md),
    internalLinksCount: hasInternalLinks(md),
    seoScore: score,
    isEmpty: wordCount < 200
  };
});

// Statistiques globales
const totalArticles = detailedStats.length;
const emptyArticles = detailedStats.filter(s => s.isEmpty).length;
const articlesWithGoodScore = detailedStats.filter(s => s.seoScore >= 70).length;
const averageWordCount = Math.round(detailedStats.reduce((sum, s) => sum + s.wordCount, 0) / totalArticles);
const averageSEOScore = Math.round(detailedStats.reduce((sum, s) => sum + s.seoScore, 0) / totalArticles);
const articlesWithMedicalDisclaimer = detailedStats.filter(s => s.hasMedicalDisclaimer).length;

// Stats par collection
const collectionStats = collectionNames.map(name => {
  const collectionArticles = detailedStats.filter(s => s.collection === name);
  return {
    name,
    count: collectionArticles.length,
    emptyCount: collectionArticles.filter(s => s.isEmpty).length,
    avgScore: collectionArticles.length > 0 ? Math.round(collectionArticles.reduce((sum, s) => sum + s.seoScore, 0) / collectionArticles.length) : 0
  };
});

// Articles prioritaires
const priorityArticles = detailedStats
  .filter(s => s.seoScore < 60 && s.wordCount > 0)
  .sort((a, b) => a.seoScore - b.seoScore)
  .slice(0, 10);
---

<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard SEO - GLP-1 France</title>
  <style>
    body { 
      font-family: 'Segoe UI', Arial, sans-serif; 
      margin: 0; 
      padding: 20px; 
      background: #f8f9fa; 
    }
    .container { 
      max-width: 1400px; 
      margin: 0 auto; 
    }
    .header { 
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
      color: white; 
      padding: 30px; 
      border-radius: 12px; 
      margin-bottom: 30px; 
    }
    .header h1 { 
      margin: 0; 
      font-size: 2.5em; 
      font-weight: 300; 
    }
    .header p { 
      margin: 10px 0 0 0; 
      opacity: 0.9; 
      font-size: 1.1em; 
    }
    
    .tabs { 
      display: flex; 
      background: white; 
      border-radius: 8px; 
      margin-bottom: 20px; 
      box-shadow: 0 2px 10px rgba(0,0,0,0.1); 
    }
    .tab { 
      padding: 15px 25px; 
      cursor: pointer; 
      border: none; 
      background: none; 
      font-size: 16px; 
      font-weight: 500; 
      color: #666; 
      transition: all 0.3s; 
    }
    .tab.active { 
      background: #667eea; 
      color: white; 
      border-radius: 8px; 
    }
    .tab:hover:not(.active) { 
      background: #f1f3f4; 
    }
    
    .tab-content { 
      display: none; 
    }
    .tab-content.active { 
      display: block; 
    }
    
    .stats-grid { 
      display: grid; 
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); 
      gap: 20px; 
      margin-bottom: 30px; 
    }
    .stat-card { 
      background: white; 
      padding: 25px; 
      border-radius: 12px; 
      box-shadow: 0 2px 10px rgba(0,0,0,0.1); 
      text-align: center; 
    }
    .stat-number { 
      font-size: 2.5em; 
      font-weight: bold; 
      margin-bottom: 10px; 
    }
    .stat-label { 
      color: #666; 
      font-size: 1.1em; 
    }
    
    .data-table { 
      background: white; 
      border-radius: 12px; 
      overflow: hidden; 
      box-shadow: 0 2px 10px rgba(0,0,0,0.1); 
      margin-bottom: 30px; 
    }
    .table-header { 
      background: #667eea; 
      color: white; 
      padding: 20px; 
    }
    .table-header h3 { 
      margin: 0; 
      font-size: 1.3em; 
    }
    
    table { 
      width: 100%; 
      border-collapse: collapse; 
    }
    th, td { 
      padding: 12px; 
      text-align: left; 
      border-bottom: 1px solid #eee; 
    }
    th { 
      background: #f8f9fa; 
      font-weight: 600; 
      color: #333; 
    }
    tr:hover { 
      background: #f8f9fa; 
    }
    
    .score-badge { 
      padding: 4px 12px; 
      border-radius: 20px; 
      font-weight: bold; 
      color: white; 
      font-size: 0.9em; 
    }
    .score-excellent { background: #28a745; }
    .score-good { background: #17a2b8; }
    .score-average { background: #ffc107; color: #333; }
    .score-poor { background: #dc3545; }
    
    .empty-indicator { color: #dc3545; font-weight: bold; }
    .good-indicator { color: #28a745; font-weight: bold; }
    
    .red { color: #dc3545; }
    .green { color: #28a745; }
    .blue { color: #17a2b8; }
    
    @media (max-width: 768px) {
      .stats-grid { grid-template-columns: 1fr; }
      .tabs { flex-direction: column; }
      table { font-size: 14px; }
      th, td { padding: 8px; }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>üè• Dashboard SEO - GLP-1 France</h1>
      <p>Monitoring complet ‚Ä¢ Analyse ‚Ä¢ Optimisation continue</p>
    </div>

    <div class="tabs">
      <button class="tab active" data-tab="overview">Vue d'ensemble</button>
      <button class="tab" data-tab="articles">Articles</button>
      <button class="tab" data-tab="keywords">Mots-cl√©s</button>
      <button class="tab" data-tab="priorities">Priorit√©s</button>
    </div>

    <!-- TAB 1: Vue d'ensemble -->
    <div id="overview" class="tab-content active">
      <div class="stats-grid">
        <div class="stat-card">
          <div class="stat-number">{totalArticles}</div>
          <div class="stat-label">Articles total</div>
        </div>
        <div class="stat-card">
          <div class="stat-number red">{emptyArticles}</div>
          <div class="stat-label">Articles vides</div>
        </div>
        <div class="stat-card">
          <div class="stat-number green">{articlesWithGoodScore}</div>
          <div class="stat-label">Score SEO ‚â• 70%</div>
        </div>
        <div class="stat-card">
          <div class="stat-number">{averageWordCount}</div>
          <div class="stat-label">Mots en moyenne</div>
        </div>
        <div class="stat-card">
          <div class="stat-number">{averageSEOScore}%</div>
          <div class="stat-label">Score SEO moyen</div>
        </div>
        <div class="stat-card">
          <div class="stat-number blue">{articlesWithMedicalDisclaimer}</div>
          <div class="stat-label">Avec disclaimer m√©dical</div>
        </div>
      </div>

      <div class="data-table">
        <div class="table-header">
          <h3>üìä Statistiques par collection</h3>
        </div>
        <table>
          <thead>
            <tr>
              <th>Collection</th>
              <th>Nombre d'articles</th>
              <th>Articles vides</th>
              <th>Score moyen</th>
              <th>Statut</th>
            </tr>
          </thead>
          <tbody>
            {collectionStats.map(col => (
              <tr>
                <td><strong>{col.name}</strong></td>
                <td>{col.count}</td>
                <td class={col.emptyCount > 0 ? 'empty-indicator' : ''}>{col.emptyCount}</td>
                <td>
                  <span class={`score-badge ${col.avgScore >= 80 ? 'score-excellent' : col.avgScore >= 70 ? 'score-good' : col.avgScore >= 50 ? 'score-average' : 'score-poor'}`}>
                    {col.avgScore}%
                  </span>
                </td>
                <td>
                  {col.emptyCount === 0 && col.avgScore >= 70 ? 
                    <span class="good-indicator">‚úÖ Optimis√©</span> : 
                    <span class="empty-indicator">‚ö†Ô∏è √Ä am√©liorer</span>
                  }
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>

    <!-- TAB 2: Articles -->
    <div id="articles" class="tab-content">
      <div class="data-table">
        <div class="table-header">
          <h3>üìù Analyse d√©taill√©e des articles</h3>
        </div>
        <table>
          <thead>
            <tr>
              <th>Titre</th>
              <th>Collection</th>
              <th>Mots</th>
              <th>Score SEO</th>
              <th>Mot-cl√© principal</th>
              <th>Densit√©</th>
              <th>H1/H2</th>
              <th>Disclaimer</th>
              <th>Liens internes</th>
            </tr>
          </thead>
          <tbody>
            {detailedStats.map(article => (
              <tr>
                <td>
                  <strong>{article.title}</strong>
                  <br />
                  <small style="color: #666;">/{article.slug}</small>
                </td>
                <td>{article.collection}</td>
                <td class={article.isEmpty ? 'empty-indicator' : ''}>{article.wordCount}</td>
                <td>
                  <span class={`score-badge ${article.seoScore >= 80 ? 'score-excellent' : article.seoScore >= 70 ? 'score-good' : article.seoScore >= 50 ? 'score-average' : 'score-poor'}`}>
                    {article.seoScore}%
                  </span>
                </td>
                <td>{article.mainKeyword || '<em>Non d√©fini</em>'}</td>
                <td class={article.mainKeywordDensity >= 1 && article.mainKeywordDensity <= 2 ? 'green' : 'red'}>
                  {article.mainKeywordDensity.toFixed(2)}%
                </td>
                <td>
                  <span class={article.h1Count === 1 ? 'green' : 'red'}>{article.h1Count}</span>/
                  <span class={article.h2Count >= 3 ? 'green' : 'red'}>{article.h2Count}</span>
                </td>
                <td class={article.hasMedicalDisclaimer ? 'green' : 'red'}>
                  {article.hasMedicalDisclaimer ? '‚úÖ' : '‚ùå'}
                </td>
                <td class={article.internalLinksCount >= 3 ? 'green' : 'red'}>
                  {article.internalLinksCount}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>

    <!-- TAB 3: Mots-cl√©s -->
    <div id="keywords" class="tab-content">
      <div class="data-table">
        <div class="table-header">
          <h3>üéØ Analyse des mots-cl√©s principaux</h3>
        </div>
        <div style="padding: 20px;">
          <p>En cours de d√©veloppement - Analyse des mots-cl√©s CSV √† impl√©menter</p>
        </div>
      </div>
    </div>

    <!-- TAB 4: Priorit√©s -->
    <div id="priorities" class="tab-content">
      <div class="data-table">
        <div class="table-header">
          <h3>üö® Articles prioritaires (score faible, potentiel √©lev√©)</h3>
        </div>
        <table>
          <thead>
            <tr>
              <th>Article</th>
              <th>Collection</th>
              <th>Score actuel</th>
              <th>Mots</th>
              <th>Probl√®mes principaux</th>
              <th>Impact estim√©</th>
            </tr>
          </thead>
          <tbody>
            {priorityArticles.map(article => (
              <tr>
                <td>
                  <strong>{article.title}</strong>
                  <br />
                  <small style="color: #666;">/{article.slug}</small>
                </td>
                <td>{article.collection}</td>
                <td>
                  <span class={`score-badge ${article.seoScore >= 50 ? 'score-average' : 'score-poor'}`}>
                    {article.seoScore}%
                  </span>
                </td>
                <td>{article.wordCount}</td>
                <td>
                  {article.h1Count !== 1 && <span style="color: red;">‚ùå H1 incorrect</span>}
                  {article.h2Count < 3 && <span style="color: red;">‚ùå Peu de H2</span>}
                  {!article.hasMedicalDisclaimer && <span style="color: red;">‚ùå Sans disclaimer</span>}
                  {article.mainKeywordDensity < 1 && <span style="color: red;">‚ùå Densit√© faible</span>}
                </td>
                <td>
                  {article.seoScore < 30 ? 'üöÄ +40-60 points' :
                   article.seoScore < 50 ? 'üìà +20-40 points' :
                   '‚ú® +10-20 points'}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div class="data-table" style="margin-top: 30px;">
        <div class="table-header">
          <h3>üìä Plan d'action recommand√©</h3>
        </div>
        <div style="padding: 20px;">
          <h4>üéØ Actions prioritaires :</h4>
          <ul style="line-height: 1.8;">
            <li><strong>Compl√©ter {emptyArticles} articles vides</strong> - Impact imm√©diat sur le contenu</li>
            <li><strong>Ajouter disclaimers m√©dicaux</strong> - {totalArticles - articlesWithMedicalDisclaimer} articles concern√©s</li>
            <li><strong>√âquilibrer les collections</strong> - Objectif 15 articles minimum par collection</li>
            <li><strong>Optimiser la densit√© des mots-cl√©s</strong> - Viser 1-2% pour les mots-cl√©s principaux</li>
            <li><strong>Structurer avec H2/H3</strong> - Am√©liorer la lisibilit√© et le SEO technique</li>
          </ul>
          
          <h4>üìà Collections √† d√©velopper :</h4>
          <ul style="line-height: 1.8;">
            {collectionStats.filter(col => col.count < 15).map(col => (
              <li><strong>{col.name}</strong> : {col.count} articles (objectif : 15) - <em>Manque {15 - col.count} articles</em></li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Gestion des onglets
      const tabs = document.querySelectorAll('.tab');
      const tabContents = document.querySelectorAll('.tab-content');

      tabs.forEach(tab => {
        tab.addEventListener('click', function() {
          const targetTab = this.dataset.tab;
          
          // D√©sactiver tous les onglets
          tabs.forEach(t => t.classList.remove('active'));
          tabContents.forEach(tc => tc.classList.remove('active'));
          
          // Activer l'onglet cliqu√©
          this.classList.add('active');
          document.getElementById(targetTab).classList.add('active');
        });
      });
    });
  </script>
</body>
</html>
