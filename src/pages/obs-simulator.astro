<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OBVS Business Model Simulator</title>
    <style>
        * { box-sizing: border-box; }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .container {
            max-width: 1600px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        .header {
            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        .header h1 {
            margin: 0;
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        .header p {
            margin: 0;
            opacity: 0.9;
            font-size: 1.1em;
        }
        .tabs {
            display: flex;
            background: #f8f9fa;
            border-bottom: 1px solid #ddd;
        }
        .tab-button {
            flex: 1;
            padding: 15px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
            font-weight: 600;
            background: #f8f9fa;
            border: none;
            font-size: 1em;
            color: #333;
        }
        .tab-button:hover { background: #e9ecef; }
        .tab-button.active {
            background: #007bff;
            color: white;
        }
        .content { padding: 30px; }
        .tab-content { display: none; }
        .tab-content.show { display: block; }
        .export-btn {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 8px;
            font-size: 1.1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            margin-bottom: 20px;
        }
        .export-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.3);
        }
        .month-selector {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 15px;
        }
        .month-selector label {
            font-weight: 600;
            color: #495057;
            margin: 0;
        }
        .month-selector select {
            padding: 8px 12px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            background: white;
            font-size: 14px;
            min-width: 120px;
        }
        .month-indicator {
            background: #007bff;
            color: white;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 600;
        }
        .category-section {
            margin-bottom: 40px;
            border: 1px solid #e1e1e1;
            border-radius: 10px;
            overflow: hidden;
        }
        .category-header {
            background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
            color: white;
            padding: 15px 20px;
            font-weight: 600;
            font-size: 1.2em;
        }
        .keyword-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 0;
        }
        .keyword-table th {
            background: #f8f9fa;
            padding: 12px 15px;
            text-align: left;
            font-weight: 600;
            border-bottom: 2px solid #dee2e6;
            font-size: 0.9em;
        }
        .keyword-table td {
            padding: 12px 15px;
            border-bottom: 1px solid #e9ecef;
            vertical-align: top;
        }
        .keyword-table tr:hover { background: #f8f9fa; }
        .volume-high { color: #28a745; font-weight: 600; }
        .volume-medium { color: #ffc107; font-weight: 600; }
        .volume-low { color: #dc3545; font-weight: 600; }
        .competition-high { 
            background: #dc3545; 
            color: white; 
            padding: 4px 8px; 
            border-radius: 4px; 
            font-size: 0.8em;
        }
        .competition-medium { 
            background: #ffc107; 
            color: white; 
            padding: 4px 8px; 
            border-radius: 4px; 
            font-size: 0.8em;
        }
        .competition-low { 
            background: #28a745; 
            color: white; 
            padding: 4px 8px; 
            border-radius: 4px; 
            font-size: 0.8em;
        }
        .priority-high { 
            background: #dc3545; 
            color: white; 
            padding: 4px 8px; 
            border-radius: 4px; 
            font-weight: 600;
        }
        .priority-medium { 
            background: #ffc107; 
            color: white; 
            padding: 4px 8px; 
            border-radius: 4px; 
            font-weight: 600;
        }
        .simulator-section {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 15px;
            margin-bottom: 30px;
            max-width: 1200px;
            margin-left: auto;
            margin-right: auto;
        }
        .simulator-header h2 {
            color: #2c3e50;
            margin-bottom: 5px;
            text-align: center;
        }
        .simulator-header p {
            color: #2c3e50;
            margin-bottom: 25px;
            text-align: center;
            font-weight: 600;
        }
        .input-section {
            background: white;
            padding: 25px;
            border-radius: 15px;
            border-left: 4px solid #007bff;
            margin-bottom: 30px;
        }
        .input-section h4 {
            color: #2c3e50;
            margin-top: 0;
            margin-bottom: 20px;
            font-size: 1.3em;
            text-align: center;
        }
        .input-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }
        .input-group {
            display: flex;
            flex-direction: column;
        }
        .input-group label {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 8px;
            font-size: 0.95em;
        }
        .input-group input {
            padding: 12px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 1.1em;
            transition: border-color 0.3s;
        }
        .input-group input:focus {
            border-color: #007bff;
            outline: none;
        }
        .output-sections {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 25px;
            margin-bottom: 30px;
        }
        .output-section {
            background: white;
            padding: 20px;
            border-radius: 15px;
            border-left: 4px solid #28a745;
        }
        .output-section h4 {
            color: #2c3e50;
            margin-top: 0;
            margin-bottom: 15px;
            font-size: 1.2em;
        }
        .metric-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #f0f0f0;
        }
        .metric-row:last-child {
            border-bottom: none;
        }
        .metric-label {
            font-weight: 600;
            color: #495057;
        }
        .metric-value {
            font-weight: 700;
            color: #2c3e50;
            font-size: 1.1em;
        }
        .key-metrics {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .metric-card {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            padding: 20px;
            border-radius: 12px;
            text-align: center;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .metric-card.warning {
            background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
        }
        .metric-card.danger {
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        }
        .metric-card h5 {
            margin: 0 0 8px 0;
            font-size: 0.9em;
            opacity: 0.9;
        }
        .metric-card .value {
            font-size: 1.8em;
            font-weight: 700;
            margin-bottom: 5px;
        }
        .metric-card .subtitle {
            font-size: 0.8em;
            opacity: 0.8;
        }
        .growth-chart {
            background: white;
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 30px;
            border-left: 4px solid #007bff;
        }
        .growth-chart h3 {
            color: #2c3e50;
            margin-top: 0;
            margin-bottom: 20px;
            text-align: center;
        }
        .monthly-table {
            width: 100%;
            border-collapse: collapse;
            font-size: 0.9em;
        }
        .monthly-table th {
            background: #f8f9fa;
            padding: 10px 8px;
            text-align: center;
            font-weight: 600;
            border-bottom: 2px solid #dee2e6;
            font-size: 0.8em;
        }
        .monthly-table td {
            padding: 8px;
            text-align: center;
            border-bottom: 1px solid #e9ecef;
            font-weight: 500;
        }
        .monthly-table tr:hover {
            background: #f8f9fa;
        }
        .positive { color: #28a745; }
        .negative { color: #dc3545; }
        .break-even { background: #d4edda !important; font-weight: 700; }
        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }
        .summary-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .summary-card h3 {
            margin: 0 0 8px 0;
            font-size: 2em;
        }
        .summary-card p {
            margin: 0;
            opacity: 0.9;
            font-size: 0.9em;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>OBVS Business Model Simulator</h1>
        </div>

        <div class="tabs">
            <button id="btn-simulator" class="tab-button active">Insurance Hybrid Model</button>
            <button id="btn-insurance" class="tab-button">B2C Model</button>
            <button id="btn-keywords" class="tab-button">Keyword Analysis</button>
        </div>

    <div class="content">

            <!-- Keywords Tab -->
            <div id="keywords" class="tab-content">
                <!-- General Consultation Category -->
                <div class="category-section">
                    <div class="category-header">General Online Consultation</div>
                    <table class="keyword-table">
                        <thead>
                            <tr>
                                <th>Keyword</th>
                                <th>Volume/month</th>
                                <th>CPC ($)</th>
                                <th>Competition</th>
                                <th>Est. CAC ($)</th>
                                <th>Potential LTV ($)</th>
                                <th>ROI (%)</th>
                                <th>Priority</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>online doctor consultation</td>
                                <td class="volume-high">135,000</td>
                                <td>$8.50</td>
                                <td><span class="competition-high">High</span></td>
                                <td>$170</td>
                                <td>$450</td>
                                <td>165%</td>
                                <td><span class="priority-high">High</span></td>
                            </tr>
                            <tr>
                                <td>talk to doctor online</td>
                                <td class="volume-high">89,000</td>
                                <td>$7.20</td>
                                <td><span class="competition-high">High</span></td>
                                <td>$144</td>
                                <td>$450</td>
                                <td>213%</td>
                                <td><span class="priority-high">High</span></td>
                            </tr>
                            <tr>
                                <td>virtual doctor visit</td>
                                <td class="volume-medium">67,000</td>
                                <td>$6.80</td>
                                <td><span class="competition-medium">Medium</span></td>
                                <td>$113</td>
                                <td>$450</td>
                                <td>298%</td>
                                <td><span class="priority-high">High</span></td>
                            </tr>
                            <tr>
                                <td>AI medicine consultation</td>
                                <td class="volume-medium">45,000</td>
                                <td>$9.10</td>
                                <td><span class="competition-medium">Medium</span></td>
                                <td>$152</td>
                                <td>$450</td>
                                <td>196%</td>
                                <td><span class="priority-medium">Medium</span></td>
                            </tr>
                            <tr>
                                <td>24 hour doctor online</td>
                                <td class="volume-medium">43,000</td>
                                <td>$9.80</td>
                                <td><span class="competition-medium">Medium</span></td>
                                <td>$163</td>
                                <td>$580</td>
                                <td>256%</td>
                                <td><span class="priority-high">High</span></td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <!-- Urgent Symptoms Category -->
                <div class="category-section">
                    <div class="category-header">Urgent Symptoms</div>
                    <table class="keyword-table">
                        <thead>
                            <tr>
                                <th>Keyword</th>
                                <th>Volume/month</th>
                                <th>CPC ($)</th>
                                <th>Competition</th>
                                <th>Est. CAC ($)</th>
                                <th>Potential LTV ($)</th>
                                <th>ROI (%)</th>
                                <th>Priority</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>chest pain online doctor</td>
                                <td class="volume-medium">34,000</td>
                                <td>$12.40</td>
                                <td><span class="competition-medium">Medium</span></td>
                                <td>$207</td>
                                <td>$650</td>
                                <td>214%</td>
                                <td><span class="priority-high">High</span></td>
                            </tr>
                            <tr>
                                <td>severe headache doctor</td>
                                <td class="volume-medium">28,000</td>
                                <td>$10.80</td>
                                <td><span class="competition-low">Low</span></td>
                                <td>$144</td>
                                <td>$650</td>
                                <td>351%</td>
                                <td><span class="priority-high">High</span></td>
                            </tr>
                            <tr>
                                <td>stomach pain consultation</td>
                                <td class="volume-medium">23,000</td>
                                <td>$8.90</td>
                                <td><span class="competition-low">Low</span></td>
                                <td>$119</td>
                                <td>$650</td>
                                <td>446%</td>
                                <td><span class="priority-high">High</span></td>
                            </tr>
                            <tr>
                                <td>emergency doctor online</td>
                                <td class="volume-medium">38,000</td>
                                <td>$11.20</td>
                                <td><span class="competition-medium">Medium</span></td>
                                <td>$187</td>
                                <td>$580</td>
                                <td>210%</td>
                                <td><span class="priority-medium">Medium</span></td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <!-- Specialties Category -->
                <div class="category-section">
                    <div class="category-header">Specialized Consultations</div>
                    <table class="keyword-table">
                        <thead>
                            <tr>
                                <th>Keyword</th>
                                <th>Volume/month</th>
                                <th>CPC ($)</th>
                                <th>Competition</th>
                                <th>Est. CAC ($)</th>
                                <th>Potential LTV ($)</th>
                                <th>ROI (%)</th>
                                <th>Priority</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>dermatologist online</td>
                                <td class="volume-high">78,000</td>
                                <td>$15.20</td>
                                <td><span class="competition-high">High</span></td>
                                <td>$304</td>
                                <td>$850</td>
                                <td>180%</td>
                                <td><span class="priority-high">High</span></td>
                            </tr>
                            <tr>
                                <td>psychiatrist consultation online</td>
                                <td class="volume-medium">52,000</td>
                                <td>$18.70</td>
                                <td><span class="competition-high">High</span></td>
                                <td>$374</td>
                                <td>$1200</td>
                                <td>221%</td>
                                <td><span class="priority-high">High</span></td>
                            </tr>
                            <tr>
                                <td>pediatrician online</td>
                                <td class="volume-medium">41,000</td>
                                <td>$13.80</td>
                                <td><span class="competition-medium">Medium</span></td>
                                <td>$230</td>
                                <td>$720</td>
                                <td>213%</td>
                                <td><span class="priority-medium">Medium</span></td>
                            </tr>
                            <tr>
                                <td>cardiologist virtual visit</td>
                                <td class="volume-low">18,000</td>
                                <td>$22.40</td>
                                <td><span class="competition-medium">Medium</span></td>
                                <td>$373</td>
                                <td>$950</td>
                                <td>155%</td>
                                <td><span class="priority-medium">Medium</span></td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="summary-cards">
                    <div class="summary-card">
                        <h3>13</h3>
                        <p>Keywords analyzed</p>
                    </div>
                    <div class="summary-card">
                        <h3>920K</h3>
                        <p>Total monthly search volume</p>
                    </div>
                    <div class="summary-card">
                        <h3>$11.80</h3>
                        <p>Average CPC</p>
                    </div>
                    <div class="summary-card">
                        <h3>258%</h3>
                        <p>Average potential ROI</p>
                    </div>
                </div>
            </div>

            <!-- B2C Model Tab -->
            <div id="simulator" class="tab-content show">
                <div class="simulator-section">
                    <div class="simulator-header">
                        <p>This model simulates an AI medicine platform where we acquire patients through advertising and pay doctors a percentage of each consultation. <br><strong>Adjust the input parameters below to see how different scenarios affect the 12-month projections and profitability.</strong></p>
                    </div>
                    
                    <!-- Input Parameters Section -->
                    <div class="input-section">
                        <h4>Core Business Parameters</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label><strong>Consultation Price ($)</strong></label>
                                <input type="number" id="consultation-price" value="95">
                            </div>
                            <div class="input-group">
                                <label><strong>Doctor Commission (%)</strong></label>
                                <input type="number" id="doctor-commission" value="30">
                            </div>
                        </div>
                    </div>

                    <!-- Patient Behavior Parameters -->
                    <div class="input-section">
                        <h4>Patient Behavior</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label>Consultations/Patient/Year</label>
                                <input type="number" id="consults-per-year" value="2.5">
                            </div>
                            <div class="input-group">
                                <label>Patient Lifetime (years)</label>
                                <input type="number" step="0.1" id="patient-lifetime" value="2.5">
                            </div>
                            <div class="input-group">
                                <label>Monthly Churn Rate (%)</label>
                                <input type="number" step="0.1" id="churn-rate" value="1.5">
                            </div>
                        </div>
                    </div>

                    <!-- Marketing Budget & Growth -->
                    <div class="input-section">
                        <h4>Marketing Budget & Growth</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label>Initial Marketing Budget ($)</label>
                                <input type="number" id="marketing-budget" value="5000">
                            </div>
                            <div class="input-group">
                                <label>Monthly Growth Rate (%)</label>
                                <input type="number" step="0.1" id="growth-rate" value="20">
                            </div>
                            <div class="input-group">
                                <label>Referral Rate (per patient)</label>
                                <input type="number" step="0.1" id="referral-rate" value="0.5">
                            </div>
                        </div>
                    </div>

                    <!-- Acquisition Channels Mix -->
                    <div class="input-section">
                        <h4>Acquisition Channels Mix</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label>SEO Budget (%)</label>
                                <input type="number" step="0.1" id="seo-percentage" value="10">
                            </div>
                            <div class="input-group">
                                <label>Social Ads Budget (%)</label>
                                <input type="number" step="0.1" id="social-percentage" value="50">
                            </div>
                            <div class="input-group">
                                <label>TV/Radio Budget (%)</label>
                                <input type="number" step="0.1" id="tv-percentage" value="20">
                            </div>
                            <div class="input-group">
                                <label>SEA/Google Ads Budget (%)</label>
                                <input type="number" step="0.1" id="paid-percentage" value="20">
                            </div>
                        </div>
                        
                        <h4 style="margin-top: 30px; margin-bottom: 20px; text-align: center; color: #6c757d; font-size: 1.1em;">CAC per Acquisition Channel</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label>SEO Average CAC ($)</label>
                                <input type="number" step="0.1" id="seo-cac" value="20">
                            </div>
                            <div class="input-group">
                                <label>Social Ads CAC ($)</label>
                                <input type="number" step="0.1" id="social-cac" value="28">
                            </div>
                            <div class="input-group">
                                <label>TV/Radio CAC ($)</label>
                                <input type="number" step="0.1" id="tv-cac" value="52">
                            </div>
                            <div class="input-group">
                                <label>SEA/Google Ads CAC ($)</label>
                                <input type="number" step="0.1" id="paid-cac" value="98">
                            </div>
                        </div>
                    </div>

                    <!-- Fixed Costs -->
                    <div class="input-section">
                        <h4>Initial Fixed Costs (Monthly)</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label>Tech Costs/Month ($)</label>
                                <input type="number" id="tech-costs" value="2000">
                            </div>
                            <div class="input-group">
                                <label>Support Costs/Month ($)</label>
                                <input type="number" id="support-costs" value="1000">
                            </div>
                            <div class="input-group">
                                <label>Legal Costs/Month ($)</label>
                                <input type="number" id="legal-costs" value="500">
                            </div>
                            <div class="input-group">
                                <label>Insurance Costs/Month ($)</label>
                                <input type="number" id="insurance-costs" value="500">
                            </div>
                            <div class="input-group">
                                <label>Admin Costs/Month ($)</label>
                                <input type="number" id="admin-costs" value="500">
                            </div>
                            <div class="input-group">
                                <label>Other Costs/Month ($)</label>
                                <input type="number" id="other-costs" value="500">
                            </div>
                        </div>
                    </div>

                    <!-- Key Metrics -->
                    <div class="key-metrics">
                        <div class="metric-card">
                            <h5>Patient LTV</h5>
                            <div class="value" id="patient-ltv">$297</div>
                            <div class="subtitle">Platform revenue per patient</div>
                        </div>
                        <div class="metric-card">
                            <h5>Blended CAC</h5>
                            <div class="value" id="blended-cac">$145</div>
                            <div class="subtitle">Customer acquisition cost</div>
                        </div>
                        <div class="metric-card">
                            <h5>LTV/CAC Ratio</h5>
                            <div class="value" id="ltv-cac-ratio">2.05</div>
                            <div class="subtitle">Profitability indicator</div>
                        </div>
                        <div class="metric-card">
                            <h5>Break-even Month</h5>
                            <div class="value" id="breakeven-month">8</div>
                            <div class="subtitle">Month to profitability</div>
                        </div>
                    </div>

                    <!-- Acquisition Channels Analysis -->
                    <div class="growth-chart">
                        <h3>Acquisition Channels Mix & Performance</h3>
                        <div style="overflow-x: auto;">
                            <table class="monthly-table">
                                <thead>
                                    <tr>
                                        <th>Channel</th>
                                        <th>Budget %</th>
                                        <th>Monthly Budget</th>
                                        <th>CAC</th>
                                        <th>New Patients</th>
                                        <th>LTV/CAC Ratio</th>
                                        <th>Monthly ROI</th>
                                        <th>Performance</th>
                                    </tr>
                                </thead>
                                <tbody id="channels-data">
                                    <!-- Data will be populated by JavaScript -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Month-by-Month Growth Chart -->
                    <div class="growth-chart">
                        <h3>12-Month Growth Projection</h3>
                        <div style="overflow-x: auto;">
                            <table class="monthly-table">
                                <thead>
                                    <tr>
                                        <th>Month</th>
                                        <th>Marketing Budget</th>
                                        <th>New Patients</th>
                                        <th>Total Patients</th>
                                        <th>Monthly Revenue</th>
                                        <th>Total Costs</th>
                                        <th>Net Profit</th>
                                        <th>Cumulative Profit</th>
                                    </tr>
                                </thead>
                                <tbody id="monthly-data">
                                    <!-- Data will be populated by JavaScript -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Month Selector -->
                    <div class="month-selector">
                        <label for="b2c-month-selector">Display Month:</label>
                        <select id="b2c-month-selector">
                            <!-- Options will be populated by JavaScript -->
                        </select>
                        <span class="month-indicator" id="b2c-month-indicator">Month 1</span>
                    </div>

                    <!-- Current Month Outputs -->
                    <div class="output-sections">
                        <div class="output-section">
                            <h4>Marketing & Acquisition</h4>
                            <div class="metric-row">
                                <span class="metric-label">Ad Spend</span>
                                <span class="metric-value" id="monthly-ad-spend">$20,000</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Paid New Patients</span>
                                <span class="metric-value" id="new-patients">95</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Referral Patients</span>
                                <span class="metric-value" id="referral-patients-display">15</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Total New Patients</span>
                                <span class="metric-value" id="total-new-patients">110</span>
                            </div>
                        </div>

                        <div class="output-section">
                            <h4>Operational Metrics</h4>
                            <div class="metric-row">
                                <span class="metric-label">Revenue</span>
                                <span class="metric-value" id="monthly-revenue">$8,075</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Doctor Payments</span>
                                <span class="metric-value" id="doctor-payments">-$5,249</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Platform Revenue</span>
                                <span class="metric-value" id="platform-revenue">$2,826</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Tech Costs/Month</span>
                                <span class="metric-value" id="tech-costs-output">$3,000</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Support Costs/Month</span>
                                <span class="metric-value" id="support-costs-output">$1,500</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Other Costs/Month</span>
                                <span class="metric-value" id="other-costs-output">$1,200</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Legal Costs/Month</span>
                                <span class="metric-value" id="legal-costs-output">$1,000</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Insurance Costs/Month</span>
                                <span class="metric-value" id="insurance-costs-output">$700</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Admin Costs/Month</span>
                                <span class="metric-value" id="admin-costs-output">$2,000</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Total Fixed Costs</span>
                                <span class="metric-value" id="fixed-costs">$0</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Net Profit</span>
                                <span class="metric-value" id="net-profit">-$35,874</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Insurance Hybrid Model Tab -->
            <div id="insurance" class="tab-content">
                <div class="simulator-section">
                    <div class="simulator-header">
                        <p>This model simulates a subscription-based AI medicine platform where doctors are paid a fixed salary and patients pay a monthly subscription fee. <br><strong>Adjust the input parameters below to see how different scenarios affect the 12-month projections and profitability.</strong></p>
                    </div>
                    
                    <!-- Core Business Parameters -->
                    <div class="input-section">
                        <h4>Core Business Parameters</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label><strong>Service Price ($/month)</strong></label>
                                <input type="number" id="insurance-service-price" value="5">
                            </div>
                            <div class="input-group">
                                <label><strong>Doctor Salary ($/year)</strong></label>
                                <input type="number" id="insurance-doctor-salary" value="200000">
                            </div>
                            <div class="input-group">
                                <label><strong>Consultations per Doctor per Day</strong></label>
                                <input type="number" id="insurance-consults-per-day" value="100">
                            </div>
                        </div>
                    </div>

                    <!-- Patient Behavior Parameters -->
                    <div class="input-section">
                        <h4>Patient Behavior</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label>Consultations/Patient/Year</label>
                                <input type="number" id="insurance-consults-per-year" value="3">
                            </div>
                            <div class="input-group">
                                <label>Patient Lifetime (years)</label>
                                <input type="number" step="0.1" id="insurance-patient-lifetime" value="2.5">
                            </div>
                            <div class="input-group">
                                <label>Monthly Churn Rate (%)</label>
                                <input type="number" step="0.1" id="ins-churn-rate" value="1.5">
                            </div>
                        </div>
                    </div>

                    <!-- Marketing Budget & Growth -->
                    <div class="input-section">
                        <h4>Marketing Budget & Growth</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label>Initial Marketing Budget ($)</label>
                                <input type="number" id="insurance-marketing-budget" value="5000">
                            </div>
                            <div class="input-group">
                                <label>Monthly Growth Rate (%)</label>
                                <input type="number" step="0.1" id="insurance-growth-rate" value="20">
                            </div>
                            <div class="input-group">
                                <label>Referral Rate (per patient)</label>
                                <input type="number" step="0.1" id="insurance-referral-rate" value="0.5">
                            </div>
                        </div>
                    </div>

                    <!-- Acquisition Channels Mix -->
                    <div class="input-section">
                        <h4>Acquisition Channels Mix</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label>SEO Budget (%)</label>
                                <input type="number" step="0.1" id="insurance-seo-percentage" value="10">
                            </div>
                            <div class="input-group">
                                <label>Social Ads Budget (%)</label>
                                <input type="number" step="0.1" id="insurance-social-percentage" value="50">
                            </div>
                            <div class="input-group">
                                <label>TV/Radio Budget (%)</label>
                                <input type="number" step="0.1" id="insurance-tv-percentage" value="20">
                            </div>
                            <div class="input-group">
                                <label>SEA/Google Ads Budget (%)</label>
                                <input type="number" step="0.1" id="insurance-paid-percentage" value="20">
                            </div>
                        </div>
                        
                        <h4 style="margin-top: 30px; margin-bottom: 20px; text-align: center; color: #6c757d; font-size: 1.1em;">CAC per Acquisition Channel</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label>SEO Average CAC ($)</label>
                                <input type="number" step="0.1" id="insurance-seo-cac" value="20">
                            </div>
                            <div class="input-group">
                                <label>Social Ads CAC ($)</label>
                                <input type="number" step="0.1" id="insurance-social-cac" value="28">
                            </div>
                            <div class="input-group">
                                <label>TV/Radio CAC ($)</label>
                                <input type="number" step="0.1" id="insurance-tv-cac" value="52">
                            </div>
                            <div class="input-group">
                                <label>SEA/Google Ads CAC ($)</label>
                                <input type="number" step="0.1" id="insurance-paid-cac" value="98">
                            </div>
                        </div>
                    </div>

                    <!-- Fixed Costs -->
                    <div class="input-section">
                        <h4>Initial Fixed Costs (Monthly)</h4>
                        <div class="input-grid">
                            <div class="input-group">
                                <label>Tech Costs/Month ($)</label>
                                <input type="number" id="insurance-tech-costs" value="2000">
                            </div>
                            <div class="input-group">
                                <label>Support Costs/Month ($)</label>
                                <input type="number" id="insurance-support-costs" value="1000">
                            </div>
                            <div class="input-group">
                                <label>Legal Costs/Month ($)</label>
                                <input type="number" id="insurance-legal-costs" value="500">
                            </div>
                            <div class="input-group">
                                <label>Insurance Costs/Month ($)</label>
                                <input type="number" id="insurance-insurance-costs" value="500">
                            </div>
                            <div class="input-group">
                                <label>Admin Costs/Month ($)</label>
                                <input type="number" id="insurance-admin-costs" value="500">
                            </div>
                            <div class="input-group">
                                <label>Other Costs/Month ($)</label>
                                <input type="number" id="insurance-other-costs" value="500">
                            </div>
                        </div>
                    </div>

                    <!-- Key Metrics -->
                    <div class="key-metrics">
                        <div class="metric-card">
                            <h5>Patient LTV</h5>
                            <div class="value" id="insurance-patient-ltv">$150</div>
                            <div class="subtitle">Total revenue per patient</div>
                        </div>
                        <div class="metric-card">
                            <h5>Blended CAC</h5>
                            <div class="value" id="insurance-blended-cac">$145</div>
                            <div class="subtitle">Customer acquisition cost</div>
                        </div>
                        <div class="metric-card">
                            <h5>LTV/CAC Ratio</h5>
                            <div class="value" id="insurance-ltv-cac-ratio">1.03</div>
                            <div class="subtitle">Profitability indicator</div>
                        </div>
                        <div class="metric-card">
                            <h5>Break-even Month</h5>
                            <div class="value" id="insurance-breakeven-month">12+</div>
                            <div class="subtitle">Month to profitability</div>
                        </div>
                    </div>

                    <!-- Acquisition Channels Analysis -->
                    <div class="growth-chart">
                        <h3>Acquisition Channels Mix & Performance</h3>
                        <div style="overflow-x: auto;">
                            <table class="monthly-table">
                                <thead>
                                    <tr>
                                        <th>Channel</th>
                                        <th>Budget %</th>
                                        <th>Monthly Budget</th>
                                        <th>CAC</th>
                                        <th>New Patients</th>
                                        <th>LTV/CAC Ratio</th>
                                        <th>Monthly ROI</th>
                                        <th>Performance</th>
                                    </tr>
                                </thead>
                                <tbody id="insurance-channels-data">
                                    <!-- Data will be populated by JavaScript -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Month-by-Month Growth Chart -->
                    <div class="growth-chart">
                        <h3>12-Month Growth Projection</h3>
                        <div style="overflow-x: auto;">
                            <table class="monthly-table">
                                <thead>
                                    <tr>
                                        <th>Month</th>
                                        <th>Marketing Budget</th>
                                        <th>New Patients</th>
                                        <th>Total Patients</th>
                                        <th>Monthly Consultations</th>
                                        <th>Doctors Needed</th>
                                        <th>Monthly Revenue</th>
                                        <th>Total Costs</th>
                                        <th>Net Profit</th>
                                        <th>Cumulative Profit</th>
                                    </tr>
                                </thead>
                                <tbody id="insurance-monthly-data">
                                    <!-- Data will be populated by JavaScript -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Month Selector -->
                    <div class="month-selector">
                        <label for="insurance-month-selector">Display Month:</label>
                        <select id="insurance-month-selector">
                            <!-- Options will be populated by JavaScript -->
                        </select>
                        <span class="month-indicator" id="insurance-month-indicator">Month 1</span>
                    </div>

                    <!-- Current Month Outputs -->
                    <div class="output-sections">
                        <div class="output-section">
                            <h4>Marketing & Acquisition</h4>
                            <div class="metric-row">
                                <span class="metric-label">Ad Spend</span>
                                <span class="metric-value" id="insurance-monthly-ad-spend">$5,000</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Paid New Patients</span>
                                <span class="metric-value" id="insurance-new-patients">95</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Referral Patients</span>
                                <span class="metric-value" id="insurance-referral-patients-display">15</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Total New Patients</span>
                                <span class="metric-value" id="insurance-total-new-patients">110</span>
                            </div>
                        </div>

                        <div class="output-section">
                            <h4>Operational Metrics</h4>
                            <div class="metric-row">
                                <span class="metric-label">Revenue</span>
                                <span class="metric-value" id="insurance-monthly-revenue">$550</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Doctor Salaries</span>
                                <span class="metric-value" id="insurance-doctor-payments">-$16,667</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Tech Costs/Month</span>
                                <span class="metric-value" id="insurance-tech-costs-output">$2,000</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Support Costs/Month</span>
                                <span class="metric-value" id="insurance-support-costs-output">$1,000</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Other Costs/Month</span>
                                <span class="metric-value" id="insurance-other-costs-output">$500</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Legal Costs/Month</span>
                                <span class="metric-value" id="insurance-legal-costs-output">$500</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Insurance Costs/Month</span>
                                <span class="metric-value" id="insurance-insurance-costs-output">$500</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Admin Costs/Month</span>
                                <span class="metric-value" id="insurance-admin-costs-output">$500</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Total Fixed Costs</span>
                                <span class="metric-value" id="insurance-fixed-costs">$5,000</span>
                            </div>
                            <div class="metric-row">
                                <span class="metric-label">Net Profit</span>
                                <span class="metric-value" id="insurance-net-profit">-$26,617</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
    // Global variables to store monthly data
    var b2cMonthlyData = [];
    var insuranceMonthlyData = [];
    var currentB2CMonth = 1;
    var currentInsuranceMonth = 1;
    
    document.addEventListener('DOMContentLoaded', function() {
        
        function switchToTab(tabName) {
            var contents = document.querySelectorAll('.tab-content');
            for (var i = 0; i < contents.length; i++) {
                contents[i].classList.remove('show');
            }
            
            var buttons = document.querySelectorAll('.tab-button');
            for (var i = 0; i < buttons.length; i++) {
                buttons[i].classList.remove('active');
            }
            
            var targetContent = document.getElementById(tabName);
            if (targetContent) {
                targetContent.classList.add('show');
            }
            
            if (tabName === 'keywords') {
                document.getElementById('btn-keywords').classList.add('active');
            } else if (tabName === 'insurance') {
                document.getElementById('btn-insurance').classList.add('active');
                // Recalculate when switching to insurance tab
                setTimeout(calculateInsuranceModel, 100);
            } else {
                document.getElementById('btn-simulator').classList.add('active');
            }
        }

        // Helper functions for month selection
        function populateMonthSelector(selectorId, monthlyData, currentMonth) {
            var selector = document.getElementById(selectorId);
            if (!selector) return;
            
            selector.innerHTML = '';
            for (var i = 1; i <= 24; i++) {
                var option = document.createElement('option');
                option.value = i;
                option.textContent = 'Month ' + i;
                if (i === currentMonth) {
                    option.selected = true;
                }
                selector.appendChild(option);
            }
        }

        function findFirstProfitableMonth(monthlyData) {
            for (var i = 0; i < monthlyData.length; i++) {
                if (monthlyData[i] && monthlyData[i].netProfit > 0) {
                    return i + 1; // months are 1-indexed
                }
            }
            return 1; // default to month 1 if no profitable month
        }

        function updateB2COutputs(month) {
            var data = b2cMonthlyData[month - 1];
            if (!data) return;
            
            currentB2CMonth = month;
            
            // Update month indicator
            var indicator = document.getElementById('b2c-month-indicator');
            if (indicator) indicator.textContent = 'Month ' + month;
            
            // Update Marketing & Acquisition metrics
            var adSpendElem = document.getElementById('monthly-ad-spend');
            if (adSpendElem) adSpendElem.textContent = '$' + Math.round(data.monthBudget).toLocaleString();
            
            var newPatElem = document.getElementById('new-patients');
            if (newPatElem) newPatElem.textContent = Math.round(data.newPatientsPaid).toLocaleString();
            
            var referralsElem = document.getElementById('referral-patients-display');
            if (referralsElem) referralsElem.textContent = Math.round(data.referrals).toLocaleString();
            
            var totalNewPatientsElem = document.getElementById('total-new-patients');
            if (totalNewPatientsElem) totalNewPatientsElem.textContent = Math.round(data.newPatients).toLocaleString();
            
            // Update Operational Metrics
            var monthlyRevElem = document.getElementById('monthly-revenue');
            if (monthlyRevElem) monthlyRevElem.textContent = '$' + Math.round(data.monthRevenue).toLocaleString();
            
            var docPayElem = document.getElementById('doctor-payments');
            if (docPayElem) docPayElem.textContent = '-$' + Math.round(data.doctorPayments).toLocaleString();
            
            var platRevElem = document.getElementById('platform-revenue');
            if (platRevElem) platRevElem.textContent = '$' + Math.round(data.platformRevenue).toLocaleString();
            
            var netProfitElem = document.getElementById('net-profit');
            if (netProfitElem) netProfitElem.textContent = '$' + Math.round(data.netProfit).toLocaleString();
        }

        function updateInsuranceOutputs(month) {
            var data = insuranceMonthlyData[month - 1];
            if (!data) return;
            
            currentInsuranceMonth = month;
            
            // Update month indicator
            var indicator = document.getElementById('insurance-month-indicator');
            if (indicator) indicator.textContent = 'Month ' + month;
            
            // Update Marketing & Acquisition metrics
            var adSpendElem = document.getElementById('insurance-monthly-ad-spend');
            if (adSpendElem) adSpendElem.textContent = '$' + Math.round(data.monthBudget).toLocaleString();
            
            var newPatElem = document.getElementById('insurance-new-patients');
            if (newPatElem) newPatElem.textContent = Math.round(data.newPatientsPaid).toLocaleString();
            
            var referralsElem = document.getElementById('insurance-referral-patients-display');
            if (referralsElem) referralsElem.textContent = Math.round(data.referrals).toLocaleString();
            
            var totalNewPatientsElem = document.getElementById('insurance-total-new-patients');
            if (totalNewPatientsElem) totalNewPatientsElem.textContent = Math.round(data.newPatients).toLocaleString();
            
            var cppElem = document.getElementById('insurance-cost-per-patient');
            if (cppElem) cppElem.textContent = '$' + Math.round(data.blendedCAC).toLocaleString();
            
            // Update Operational Metrics
            var monthlyRevElem = document.getElementById('insurance-monthly-revenue');
            if (monthlyRevElem) monthlyRevElem.textContent = '$' + Math.round(data.monthRevenue).toLocaleString();
            
            var docPayElem = document.getElementById('insurance-doctor-payments');
            if (docPayElem) docPayElem.textContent = '-$' + Math.round(data.doctorCostsMonth).toLocaleString();
            
            var netProfitElem = document.getElementById('insurance-net-profit');
            if (netProfitElem) netProfitElem.textContent = '$' + Math.round(data.netProfit).toLocaleString();
        }

        function calculateModel() {
            // Get all input values
            var consultationPrice = parseFloat(document.getElementById('consultation-price').value) || 95;
            var doctorCommission = parseFloat(document.getElementById('doctor-commission').value) || 62;
            var platformCommission = 100 - doctorCommission; // Platform prend le reste
            // Lire les coûts fixes depuis les inputs (editable)
            var techCosts = parseFloat(document.getElementById('tech-costs').value) || 200;
            var supportCosts = parseFloat(document.getElementById('support-costs').value) || 100;
            var otherCosts = parseFloat(document.getElementById('other-costs').value) || 50;
            var legalCosts = parseFloat(document.getElementById('legal-costs').value) || 50;
            var insuranceCosts = parseFloat(document.getElementById('insurance-costs').value) || 50;
            var adminCosts = parseFloat(document.getElementById('admin-costs').value) || 50;
            // Affichage dans l'output
            document.getElementById('tech-costs-output').textContent = '$' + techCosts.toLocaleString();
            document.getElementById('support-costs-output').textContent = '$' + supportCosts.toLocaleString();
            document.getElementById('other-costs-output').textContent = '$' + otherCosts.toLocaleString();
            document.getElementById('legal-costs-output').textContent = '$' + legalCosts.toLocaleString();
            document.getElementById('insurance-costs-output').textContent = '$' + insuranceCosts.toLocaleString();
            document.getElementById('admin-costs-output').textContent = '$' + adminCosts.toLocaleString();
            // Paramètres de croissance et calculs de base
            var marketingBudget = parseFloat(document.getElementById('marketing-budget').value) || 5000;
            var growthRate = parseFloat(document.getElementById('growth-rate').value) || 20;
            var referralRate = parseFloat(document.getElementById('referral-rate').value) || 0.5;
            var consultsPerYear = parseFloat(document.getElementById('consults-per-year').value) || 2.5;
            var patientLifetime = parseFloat(document.getElementById('patient-lifetime').value) || 2.5;
            var churnRate = parseFloat(document.getElementById('churn-rate').value) || 1.5;
            
            // Mix d'acquisition multi-canal
            var seoPercentage = parseFloat(document.getElementById('seo-percentage').value) || 10;
            var socialPercentage = parseFloat(document.getElementById('social-percentage').value) || 50;
            var tvPercentage = parseFloat(document.getElementById('tv-percentage').value) || 20;
            var paidPercentage = parseFloat(document.getElementById('paid-percentage').value) || 20;
            
            var seoCac = parseFloat(document.getElementById('seo-cac').value) || 20;
            var socialCac = parseFloat(document.getElementById('social-cac').value) || 28;
            var tvCac = parseFloat(document.getElementById('tv-cac').value) || 52;
            var paidCac = parseFloat(document.getElementById('paid-cac').value) || 98;

            // Calculs LTV et CAC blended
            var platformRevPerConsult = consultationPrice * (platformCommission / 100);
            var patientLTV = platformRevPerConsult * consultsPerYear * patientLifetime;
            
            // Calcul des patients par canal
            var seoNewPatients = (marketingBudget * seoPercentage / 100) / seoCac;
            var socialNewPatients = (marketingBudget * socialPercentage / 100) / socialCac;
            var tvNewPatients = (marketingBudget * tvPercentage / 100) / tvCac;
            var paidNewPatients = (marketingBudget * paidPercentage / 100) / paidCac;
            
            var totalNewPatients = seoNewPatients + socialNewPatients + tvNewPatients + paidNewPatients;
            var totalPaidNewPatients = totalNewPatients; // Patients payants seulement
            
            // Pour le calcul initial, on commence sans referrals (mois 1)
            var blendedCAC = marketingBudget / totalNewPatients; // CAC blended
            var ltvCacRatio = patientLTV / blendedCAC;

            // Mettre à jour les métriques clés
            document.getElementById('patient-ltv').textContent = '$' + Math.round(patientLTV);
            document.getElementById('blended-cac').textContent = '$' + Math.round(blendedCAC);
            document.getElementById('ltv-cac-ratio').textContent = ltvCacRatio.toFixed(2);

            // Remplir le tableau des canaux d'acquisition
            var channelsData = [
                {
                    name: '🔍 SEO (Organic)',
                    percentage: seoPercentage,
                    budget: marketingBudget * seoPercentage / 100,
                    cac: seoCac,
                    patients: seoNewPatients,
                    ltvCacRatio: patientLTV / seoCac,
                    roi: ((patientLTV - seoCac) / seoCac * 100),
                    performance: patientLTV / seoCac >= 5 ? 'Excellent' : patientLTV / seoCac >= 3 ? 'Good' : 'Poor'
                },
                {
                    name: '📱 Social Ads',
                    percentage: socialPercentage,
                    budget: marketingBudget * socialPercentage / 100,
                    cac: socialCac,
                    patients: socialNewPatients,
                    ltvCacRatio: patientLTV / socialCac,
                    roi: ((patientLTV - socialCac) / socialCac * 100),
                    performance: patientLTV / socialCac >= 5 ? 'Excellent' : patientLTV / socialCac >= 3 ? 'Good' : 'Poor'
                },
                {
                    name: '📺 TV/Radio Local',
                    percentage: tvPercentage,
                    budget: marketingBudget * tvPercentage / 100,
                    cac: tvCac,
                    patients: tvNewPatients,
                    ltvCacRatio: patientLTV / tvCac,
                    roi: ((patientLTV - tvCac) / tvCac * 100),
                    performance: patientLTV / tvCac >= 5 ? 'Excellent' : patientLTV / tvCac >= 3 ? 'Good' : 'Poor'
                },
                {
                    name: '� SEA (Google Ads)',
                    percentage: paidPercentage,
                    budget: marketingBudget * paidPercentage / 100,
                    cac: paidCac,
                    patients: paidNewPatients,
                    ltvCacRatio: patientLTV / paidCac,
                    roi: ((patientLTV - paidCac) / paidCac * 100),
                    performance: patientLTV / paidCac >= 5 ? 'Excellent' : patientLTV / paidCac >= 3 ? 'Good' : 'Poor'
                }
            ];

            var channelsTableBody = document.getElementById('channels-data');
            if (channelsTableBody) {
                channelsTableBody.innerHTML = '';
                for (var i = 0; i < channelsData.length; i++) {
                    var channel = channelsData[i];
                    var perfClass = channel.performance === 'Excellent' ? 'positive' : channel.performance === 'Good' ? '' : 'negative';
                    channelsTableBody.innerHTML += 
                        '<tr>' +
                        '<td>' + channel.name + '</td>' +
                        '<td>' + channel.percentage.toFixed(1) + '%</td>' +
                        '<td>$' + Math.round(channel.budget).toLocaleString() + '</td>' +
                        '<td>$' + channel.cac + '</td>' +
                        '<td>' + Math.round(channel.patients) + '</td>' +
                        '<td>' + channel.ltvCacRatio.toFixed(1) + '</td>' +
                        '<td>' + channel.roi.toFixed(0) + '%</td>' +
                        '<td class="' + perfClass + '">' + channel.performance + '</td>' +
                        '</tr>';
                }
            }

            // Mettre à jour l'affichage du Monthly Ad Spend (mois 1)
            var adSpendElem = document.getElementById('monthly-ad-spend');
            if (adSpendElem) adSpendElem.textContent = '$' + Math.round(marketingBudget).toLocaleString();

            // Calculs current-month (mois 1) pour outputs immédiats
            var monthlyNewPatientsRounded = Math.round(totalNewPatients);
            var costPerPatient = totalNewPatients > 0 ? (marketingBudget / totalNewPatients) : 0;
            var totalConsultRevenue = totalNewPatients * consultationPrice * (consultsPerYear / 12);
            var platformRevenue = totalConsultRevenue * (platformCommission / 100);
            var doctorPaymentsCurrent = totalConsultRevenue * (doctorCommission / 100);

            // Mettre à jour outputs actuels
            var newPatElem = document.getElementById('new-patients'); if (newPatElem) newPatElem.textContent = Math.round(totalPaidNewPatients).toLocaleString();
            var referralsElem = document.getElementById('wom-patients-display'); if (referralsElem) referralsElem.textContent = '0'; // Mois 1, pas encore de referrals
            var totalNewPatientsElem = document.getElementById('total-new-patients'); if (totalNewPatientsElem) totalNewPatientsElem.textContent = Math.round(totalNewPatients).toLocaleString();
            var platRevElem = document.getElementById('platform-revenue'); if (platRevElem) platRevElem.textContent = '$' + Math.round(platformRevenue).toLocaleString();
            var docPayElem = document.getElementById('doctor-payments'); if (docPayElem) docPayElem.textContent = '-$' + Math.round(doctorPaymentsCurrent).toLocaleString();

            // Calcul du Monthly Revenue (incluant tous les patients actifs)
            var platformRevPerConsult = consultationPrice * (platformCommission / 100);
            var monthlyRevenueTotal = totalNewPatients * platformRevPerConsult * (consultsPerYear / 12);
            var monthlyRevElem = document.getElementById('monthly-revenue'); 
            if (monthlyRevElem) monthlyRevElem.textContent = '$' + Math.round(monthlyRevenueTotal).toLocaleString();

            // Initialisation pour projection 12 mois
            var tbody = document.getElementById('monthly-data');
            if (tbody) tbody.innerHTML = '';
            var cumulativeProfit = 0;
            var activePatients = 0; // Start avec 0 patients actifs
            var breakevenMonth = null;

            // Valeurs fixes pour les coûts (total)
            var fixedCosts = techCosts + supportCosts + otherCosts + legalCosts + insuranceCosts + adminCosts;

            // Mettre à jour l'affichage du total des Fixed Costs
            var fixedElem = document.getElementById('fixed-costs');
            if (fixedElem) fixedElem.textContent = '$' + Math.round(fixedCosts).toLocaleString();

            // Calculer Net Profit mois 1
            var netProfitMonth1 = platformRevenue - doctorPaymentsCurrent - marketingBudget - fixedCosts;
            var netProfitElem = document.getElementById('net-profit');
            if (netProfitElem) netProfitElem.textContent = '$' + Math.round(netProfitMonth1).toLocaleString();

            // Simulation 24 mois avec système de recommandations
            var tbody = document.getElementById('monthly-data');
            if (tbody) tbody.innerHTML = '';

            // Clear and initialize B2C monthly data
            b2cMonthlyData = [];

            for (var month = 1; month <= 24; month++) {
                // Croissance du budget marketing
                var monthBudget = marketingBudget * Math.pow(1 + growthRate / 100, month - 1);
                
                // Nouveaux patients acquis ce mois (marketing payant)
                var newPatientsPaid = totalPaidNewPatients * Math.pow(1 + growthRate / 100, month - 1);
                
                // Nouveaux patients par recommandations (referrals)
                var referrals = Math.round(activePatients * referralRate);
                
                // Total nouveaux patients ce mois
                var newPatients = newPatientsPaid + referrals;
                
                // Mise à jour de la base de patients actifs (nouveaux - churn)
                var churnedPatients = activePatients * (churnRate / 100);
                activePatients = Math.max(0, activePatients - churnedPatients + newPatients);
                
                // Revenus mensuels basés sur TOUS les patients actifs
                var monthlyConsults = activePatients * (consultsPerYear / 12);
                var totalConsultRevenueMonth = monthlyConsults * consultationPrice;
                var monthRevenue = totalConsultRevenueMonth * (platformCommission / 100);
                
                // Coûts mensuels
                var doctorPayments = totalConsultRevenueMonth * (doctorCommission / 100);
                var totalCosts = doctorPayments + fixedCosts + monthBudget;
                
                // Profits
                var netProfit = monthRevenue - totalCosts;
                cumulativeProfit += netProfit;
                
                // Store monthly data
                var monthlyBlendedCAC = newPatients > 0 ? monthBudget / newPatients : 0;
                var platformRevenue = monthRevenue;
                
                b2cMonthlyData.push({
                    month: month,
                    monthBudget: monthBudget,
                    newPatientsPaid: newPatientsPaid,
                    referrals: referrals,
                    newPatients: newPatients,
                    activePatients: activePatients,
                    monthRevenue: monthRevenue,
                    doctorPayments: doctorPayments,
                    totalCosts: totalCosts,
                    netProfit: netProfit,
                    cumulativeProfit: cumulativeProfit,
                    blendedCAC: monthlyBlendedCAC,
                    platformRevenue: platformRevenue
                });
                
                // Détecter le break-even
                if (breakevenMonth === null && netProfit > 0) {
                    breakevenMonth = month;
                }
                
                // Affichage ligne (only first 12 months in table)
                if (month <= 12 && tbody) {
                    var rowClass = '';
                    if (netProfit > 0 && (month === 1 || month === breakevenMonth)) {
                        rowClass = ' class="break-even"';
                    }
                    var profitClass = netProfit > 0 ? 'positive' : 'negative';
                    var cumProfitClass = cumulativeProfit > 0 ? 'positive' : 'negative';
                    
                    tbody.innerHTML += '<tr' + rowClass + '>' +
                        '<td>' + month + '</td>' +
                        '<td>$' + Math.round(monthBudget).toLocaleString() + '</td>' +
                        '<td>' + Math.round(newPatients) + '</td>' +
                        '<td>' + Math.round(activePatients) + '</td>' +
                        '<td>$' + Math.round(monthRevenue).toLocaleString() + '</td>' +
                        '<td>$' + Math.round(totalCosts).toLocaleString() + '</td>' +
                        '<td class="' + profitClass + '">$' + Math.round(netProfit).toLocaleString() + '</td>' +
                        '<td class="' + cumProfitClass + '">$' + Math.round(cumulativeProfit).toLocaleString() + '</td>' +
                        '</tr>';
                }
            }

            // Setup month selector and choose default month
            populateMonthSelector('b2c-month-selector', b2cMonthlyData, currentB2CMonth);
            var defaultMonth = findFirstProfitableMonth(b2cMonthlyData);
            currentB2CMonth = defaultMonth;
            
            // Update selector to show correct default month
            var selector = document.getElementById('b2c-month-selector');
            if (selector) {
                selector.value = defaultMonth;
                selector.addEventListener('change', function() {
                    updateB2COutputs(parseInt(this.value));
                });
            }
            
            // Update outputs with default month
            updateB2COutputs(defaultMonth);

            // Mettre à jour le breakeven month
            document.getElementById('breakeven-month').textContent = breakevenMonth || '12+';
            var breakevenCard = document.getElementById('breakeven-month').parentElement;
            breakevenCard.className = 'metric-card';
            if (breakevenMonth && breakevenMonth <= 6) {
                breakevenCard.classList.add(''); // Good - green
            } else if (breakevenMonth && breakevenMonth <= 10) {
                breakevenCard.classList.add('warning'); // Warning - orange
            } else {
                breakevenCard.classList.add('danger'); // Danger - red
            }

            // Mettre à jour LTV/CAC ratio color
            var ltvCacCard = document.getElementById('ltv-cac-ratio').parentElement;
            ltvCacCard.className = 'metric-card';
            if (ltvCacRatio >= 3) {
                ltvCacCard.classList.add(''); // Good
            } else if (ltvCacRatio >= 2) {
                ltvCacCard.classList.add('warning'); // Warning
            } else {
                ltvCacCard.classList.add('danger'); // Danger
            }
        }

        function calculateInsuranceModel() {
            // Get Insurance Model input values
            var servicePrice = parseFloat(document.getElementById('insurance-service-price').value) || 5;
            var doctorSalary = parseFloat(document.getElementById('insurance-doctor-salary').value) || 200000;
            var consultsPerDay = parseFloat(document.getElementById('insurance-consults-per-day').value) || 100;
            var consultsPerYear = parseFloat(document.getElementById('insurance-consults-per-year').value) || 3;
            var patientLifetime = parseFloat(document.getElementById('insurance-patient-lifetime').value) || 2.5;
            var churnRate = parseFloat(document.getElementById('ins-churn-rate').value) || 1.5;
            var marketingBudget = parseFloat(document.getElementById('insurance-marketing-budget').value) || 5000;
            var growthRate = parseFloat(document.getElementById('insurance-growth-rate').value) || 20;
            var referralRate = parseFloat(document.getElementById('insurance-referral-rate').value) || 0.5;

            // Acquisition channels
            var seoPercentage = parseFloat(document.getElementById('insurance-seo-percentage').value) || 10;
            var socialPercentage = parseFloat(document.getElementById('insurance-social-percentage').value) || 50;
            var tvPercentage = parseFloat(document.getElementById('insurance-tv-percentage').value) || 20;
            var paidPercentage = parseFloat(document.getElementById('insurance-paid-percentage').value) || 20;

            var seoCac = parseFloat(document.getElementById('insurance-seo-cac').value) || 20;
            var socialCac = parseFloat(document.getElementById('insurance-social-cac').value) || 28;
            var tvCac = parseFloat(document.getElementById('insurance-tv-cac').value) || 52;
            var paidCac = parseFloat(document.getElementById('insurance-paid-cac').value) || 98;

            // Fixed costs
            var techCosts = parseFloat(document.getElementById('insurance-tech-costs').value) || 2000;
            var supportCosts = parseFloat(document.getElementById('insurance-support-costs').value) || 1000;
            var otherCosts = parseFloat(document.getElementById('insurance-other-costs').value) || 500;
            var legalCosts = parseFloat(document.getElementById('insurance-legal-costs').value) || 500;
            var insuranceCosts = parseFloat(document.getElementById('insurance-insurance-costs').value) || 500;
            var adminCosts = parseFloat(document.getElementById('insurance-admin-costs').value) || 500;
            var fixedCosts = techCosts + supportCosts + otherCosts + legalCosts + insuranceCosts + adminCosts;

            // Calculate key metrics for Insurance Model
            var patientLTV = servicePrice * 12 * patientLifetime; // Monthly subscription * 12 months * lifetime
            
            // For doctor calculation, use a baseline minimum or projected patient volume
            // Assume we need at least 1 doctor and scale based on expected patient growth
            var baselinePatientsYear1 = Math.max(1000, totalNewPatients * 24); // Conservative estimate for year 1
            var totalConsultationsPerYear = baselinePatientsYear1 * consultsPerYear;
            var workingDaysPerYear = 250; // Standard working days
            var totalConsultationsPerDay = totalConsultationsPerYear / workingDaysPerYear;
            
            // Calculate doctors needed based on consultation capacity per doctor
            var doctorsNeeded = Math.max(1, Math.ceil(totalConsultationsPerDay / consultsPerDay));
            var totalDoctorCosts = doctorsNeeded * doctorSalary;

            // Acquisition calculations
            var seoNewPatients = (marketingBudget * seoPercentage / 100) / seoCac;
            var socialNewPatients = (marketingBudget * socialPercentage / 100) / socialCac;
            var tvNewPatients = (marketingBudget * tvPercentage / 100) / tvCac;
            var paidNewPatients = (marketingBudget * paidPercentage / 100) / paidCac;
            var totalNewPatients = seoNewPatients + socialNewPatients + tvNewPatients + paidNewPatients;
            var blendedCAC = marketingBudget / totalNewPatients;
            var ltvCacRatio = patientLTV / blendedCAC;

            // Update key metrics
            document.getElementById('insurance-patient-ltv').textContent = '$' + Math.round(patientLTV);
            document.getElementById('insurance-blended-cac').textContent = '$' + Math.round(blendedCAC);
            document.getElementById('insurance-ltv-cac-ratio').textContent = ltvCacRatio.toFixed(2);
            document.getElementById('insurance-new-patients').textContent = Math.round(totalNewPatients);
            document.getElementById('insurance-monthly-revenue').textContent = '$' + Math.round(totalNewPatients * servicePrice).toLocaleString();
            
            // Update fixed costs outputs
            document.getElementById('insurance-tech-costs-output').textContent = '$' + techCosts.toLocaleString();
            document.getElementById('insurance-support-costs-output').textContent = '$' + supportCosts.toLocaleString();
            document.getElementById('insurance-other-costs-output').textContent = '$' + otherCosts.toLocaleString();
            document.getElementById('insurance-legal-costs-output').textContent = '$' + legalCosts.toLocaleString();
            document.getElementById('insurance-insurance-costs-output').textContent = '$' + insuranceCosts.toLocaleString();
            document.getElementById('insurance-admin-costs-output').textContent = '$' + adminCosts.toLocaleString();
            document.getElementById('insurance-fixed-costs').textContent = '$' + Math.round(fixedCosts).toLocaleString();

            // Remplir le tableau des canaux d'acquisition pour Insurance Model
            var channelsData = [
                {
                    name: '🔍 SEO (Organic)',
                    percentage: seoPercentage,
                    budget: marketingBudget * seoPercentage / 100,
                    cac: seoCac,
                    patients: seoNewPatients,
                    ltvCacRatio: patientLTV / seoCac,
                    roi: ((patientLTV - seoCac) / seoCac * 100),
                    performance: patientLTV / seoCac >= 5 ? 'Excellent' : patientLTV / seoCac >= 3 ? 'Good' : 'Poor'
                },
                {
                    name: '📱 Social Ads',
                    percentage: socialPercentage,
                    budget: marketingBudget * socialPercentage / 100,
                    cac: socialCac,
                    patients: socialNewPatients,
                    ltvCacRatio: patientLTV / socialCac,
                    roi: ((patientLTV - socialCac) / socialCac * 100),
                    performance: patientLTV / socialCac >= 5 ? 'Excellent' : patientLTV / socialCac >= 3 ? 'Good' : 'Poor'
                },
                {
                    name: '📺 TV/Radio Local',
                    percentage: tvPercentage,
                    budget: marketingBudget * tvPercentage / 100,
                    cac: tvCac,
                    patients: tvNewPatients,
                    ltvCacRatio: patientLTV / tvCac,
                    roi: ((patientLTV - tvCac) / tvCac * 100),
                    performance: patientLTV / tvCac >= 5 ? 'Excellent' : patientLTV / tvCac >= 3 ? 'Good' : 'Poor'
                },
                {
                    name: '🔍 SEA (Google Ads)',
                    percentage: paidPercentage,
                    budget: marketingBudget * paidPercentage / 100,
                    cac: paidCac,
                    patients: paidNewPatients,
                    ltvCacRatio: patientLTV / paidCac,
                    roi: ((patientLTV - paidCac) / paidCac * 100),
                    performance: patientLTV / paidCac >= 5 ? 'Excellent' : patientLTV / paidCac >= 3 ? 'Good' : 'Poor'
                }
            ];

            var channelsTableBody = document.getElementById('insurance-channels-data');
            if (channelsTableBody) {
                channelsTableBody.innerHTML = '';
                for (var i = 0; i < channelsData.length; i++) {
                    var channel = channelsData[i];
                    var perfClass = channel.performance === 'Excellent' ? 'positive' : channel.performance === 'Good' ? '' : 'negative';
                    channelsTableBody.innerHTML += 
                        '<tr>' +
                        '<td>' + channel.name + '</td>' +
                        '<td>' + channel.percentage.toFixed(1) + '%</td>' +
                        '<td>$' + Math.round(channel.budget).toLocaleString() + '</td>' +
                        '<td>$' + channel.cac + '</td>' +
                        '<td>' + Math.round(channel.patients) + '</td>' +
                        '<td>' + channel.ltvCacRatio.toFixed(1) + '</td>' +
                        '<td>' + channel.roi.toFixed(0) + '%</td>' +
                        '<td class="' + perfClass + '">' + channel.performance + '</td>' +
                        '</tr>';
                }
            }

            // 24-month simulation for Insurance Model
            var activePatients = 0;
            var cumulativeProfit = 0;
            var breakevenMonth = null;
            var tbody = document.getElementById('insurance-monthly-data');
            if (tbody) tbody.innerHTML = '';

            // Clear and initialize Insurance monthly data
            insuranceMonthlyData = [];

            // Ensure all variables are properly defined
            var safeFixedCosts = fixedCosts || 5000;
            var safeTotalDoctorCosts = totalDoctorCosts || 200000;
            var safeMarketingBudget = marketingBudget || 5000;
            var safeGrowthRate = growthRate || 20;
            var safeReferralRate = referralRate || 0.5;
            var safeChurnRate = churnRate || 1.5;
            var safeTotalNewPatients = totalNewPatients || 95;
            var safeServicePrice = servicePrice || 5;

            for (var month = 1; month <= 24; month++) {
                // Monthly budget growth
                var monthBudget = safeMarketingBudget * Math.pow(1 + safeGrowthRate / 100, month - 1);
                
                // New patients from marketing
                var newPatientsPaidMonth = safeTotalNewPatients * Math.pow(1 + safeGrowthRate / 100, month - 1);
                
                // Referrals from existing patients
                var referrals = Math.round(activePatients * safeReferralRate);
                
                // Total new patients this month
                var newPatients = newPatientsPaidMonth + referrals;
                
                // Update active patient base (new - churn)
                var churnedPatients = Math.round(activePatients * (safeChurnRate / 100));
                activePatients = Math.max(0, activePatients - churnedPatients + newPatients);
                
                // Calculate consultations needed this month
                var monthlyConsultationsNeeded = activePatients * (consultsPerYear / 12);
                var dailyConsultationsNeeded = monthlyConsultationsNeeded / 30; // Approximate days per month
                
                // Calculate doctors needed dynamically this month
                var doctorsNeededThisMonth = Math.max(1, Math.ceil(dailyConsultationsNeeded / consultsPerDay));
                var doctorCostsMonth = (doctorsNeededThisMonth * doctorSalary) / 12;
                
                // Monthly revenue from subscriptions
                var monthRevenue = activePatients * safeServicePrice;
                
                // Monthly costs
                var totalCosts = doctorCostsMonth + safeFixedCosts + monthBudget;
                
                // Profits
                var netProfit = monthRevenue - totalCosts;
                cumulativeProfit += netProfit;
                
                // Store monthly data for Insurance model
                var monthlyBlendedCAC = newPatients > 0 ? monthBudget / newPatients : 0;
                
                insuranceMonthlyData.push({
                    month: month,
                    monthBudget: monthBudget,
                    newPatientsPaid: newPatientsPaidMonth,
                    referrals: referrals,
                    newPatients: newPatients,
                    activePatients: activePatients,
                    monthRevenue: monthRevenue,
                    doctorCostsMonth: doctorCostsMonth,
                    totalCosts: totalCosts,
                    netProfit: netProfit,
                    cumulativeProfit: cumulativeProfit,
                    blendedCAC: monthlyBlendedCAC,
                    monthlyConsultationsNeeded: monthlyConsultationsNeeded,
                    doctorsNeededThisMonth: doctorsNeededThisMonth
                });
                
                // Detect break-even
                if (breakevenMonth === null && netProfit > 0) {
                    breakevenMonth = month;
                }

                // Display row (only first 12 months in table)
                if (month <= 12 && tbody) {
                    var rowClass = '';
                    if (netProfit > 0 && (month === 1 || month === breakevenMonth)) {
                        rowClass = ' class="break-even"';
                    }
                    var profitClass = netProfit > 0 ? 'positive' : 'negative';
                    var cumProfitClass = cumulativeProfit > 0 ? 'positive' : 'negative';
                    
                    tbody.innerHTML += '<tr' + rowClass + '>' +
                        '<td>' + month + '</td>' +
                        '<td>$' + Math.round(monthBudget).toLocaleString() + '</td>' +
                        '<td>' + Math.round(newPatients) + '</td>' +
                        '<td>' + Math.round(activePatients) + '</td>' +
                        '<td>' + Math.round(monthlyConsultationsNeeded) + '</td>' +
                        '<td>' + doctorsNeededThisMonth + '</td>' +
                        '<td>$' + Math.round(monthRevenue).toLocaleString() + '</td>' +
                        '<td>$' + Math.round(totalCosts).toLocaleString() + '</td>' +
                        '<td class="' + profitClass + '">$' + Math.round(netProfit).toLocaleString() + '</td>' +
                        '<td class="' + cumProfitClass + '">$' + Math.round(cumulativeProfit).toLocaleString() + '</td>' +
                        '</tr>';
                }
            }

            // Setup month selector and choose default month for Insurance
            populateMonthSelector('insurance-month-selector', insuranceMonthlyData, currentInsuranceMonth);
            var defaultMonth = findFirstProfitableMonth(insuranceMonthlyData);
            currentInsuranceMonth = defaultMonth;
            
            // Update selector to show correct default month
            var selector = document.getElementById('insurance-month-selector');
            if (selector) {
                selector.value = defaultMonth;
                selector.addEventListener('change', function() {
                    updateInsuranceOutputs(parseInt(this.value));
                });
            }
            
            // Update outputs with default month
            updateInsuranceOutputs(defaultMonth);

            // Update break-even month display
            document.getElementById('insurance-breakeven-month').textContent = breakevenMonth || '12+';
        }

            // Tab switching
            if(document.getElementById('btn-keywords'))
                document.getElementById('btn-keywords').addEventListener('click', function() { switchToTab('keywords'); });
            if(document.getElementById('btn-simulator'))
                document.getElementById('btn-simulator').addEventListener('click', function() { switchToTab('simulator'); });
            if(document.getElementById('btn-insurance'))
                document.getElementById('btn-insurance').addEventListener('click', function() { switchToTab('insurance'); });

            // Input listeners for B2C Model
            var inputs = document.querySelectorAll('.simulator-section input');
            for (var i = 0; i < inputs.length; i++) {
                inputs[i].addEventListener('input', calculateModel);
            }

            // Input listeners for Insurance Hybrid Model
            var insInputs = document.querySelectorAll('#insurance input');
            for (var i = 0; i < insInputs.length; i++) {
                insInputs[i].addEventListener('input', calculateInsuranceModel);
            }

            // Initial calculations
            calculateModel();
            calculateInsuranceModel();
        });
        </script>
        </body>
    </html>