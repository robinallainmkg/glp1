---
interface Props {
  article: any;
  collection: string;
  categoryName: string;
  colors: {
    bg: string;
    text: string;
    badge: string;
  };
}

const { article, collection, categoryName, colors } = Astro.props;
const url = `/${collection}/${article.slug}/`;
---

<article class="group bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-500 overflow-hidden border border-slate-100 hover:border-emerald-200 hover:-translate-y-2">
  {/* Image de l'article avec fallback automatique */}
  <div class="relative h-48 overflow-hidden">
    <img 
      src={`/images/thumbnails/${article.slug}-illus.jpg`}
      alt={article.data.title}
      class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
      loading="lazy"
      onerror={`this.onerror=null; this.src='/images/thumbnails/${article.slug}.svg'`}
    />
    <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
    <div class="absolute top-4 left-4">
      <span class={`inline-flex items-center px-3 py-1.5 rounded-full text-sm font-semibold text-white bg-${colors.bg}-600/90 backdrop-blur-sm border border-white/20`}>
        <div class="w-2 h-2 rounded-full bg-white mr-2"></div>
        {categoryName}
      </span>
    </div>
  </div>
  
  <div class="p-6">
    <h2 class="text-xl font-bold text-slate-900 mb-4 line-clamp-2 group-hover:text-emerald-700 transition-colors leading-snug">
      <a href={url} class="hover:underline">
        {article.data.title}
      </a>
    </h2>
    
    {article.data.description && (
      <p class="text-slate-600 mb-6 line-clamp-3 leading-relaxed">
        {article.data.description}
      </p>
    )}
    
    <div class="flex items-center justify-between text-sm text-slate-500 mb-6 pb-4 border-b border-slate-100">
      {article.data.publishedAt && (
        <time datetime={article.data.publishedAt} class="flex items-center">
          <svg class="w-4 h-4 mr-1.5 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
          </svg>
          {new Date(article.data.publishedAt).toLocaleDateString('fr-FR', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
      )}
      
      {article.data.author && (
        <span class="flex items-center">
          <svg class="w-4 h-4 mr-1.5 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
          </svg>
          {article.data.author}
        </span>
      )}
    </div>
    
    <a 
      href={url}
      class="inline-flex items-center justify-center w-full px-6 py-3 bg-gradient-to-r from-emerald-600 to-teal-600 text-white font-semibold rounded-xl hover:from-emerald-700 hover:to-teal-700 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
    >
      Lire l'article
      <svg class="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
      </svg>
    </a>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
