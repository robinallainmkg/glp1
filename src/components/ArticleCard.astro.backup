---
export interface Props {
  title: string;
  description: string;
  url: string;
  category: string;
  slug: string;
}

const { title, description, url, category, slug } = Astro.props;

// Couleurs par catégorie
const categoryColors = {
  'glp1-perte-de-poids': 'from-emerald-500 to-teal-600',
  'glp1-diabete': 'from-blue-500 to-indigo-600', 
  'glp1-cout': 'from-purple-500 to-violet-600',
  'effets-secondaires-glp1': 'from-red-500 to-rose-600',
  'alternatives-glp1': 'from-green-500 to-emerald-600',
  'medicaments-glp1': 'from-orange-500 to-amber-600',
  'regime-glp1': 'from-cyan-500 to-blue-600',
  'avant-apres-glp1': 'from-pink-500 to-fuchsia-600',
  'recherche-glp1': 'from-slate-500 to-gray-600',
  'medecins-glp1-france': 'from-indigo-500 to-purple-600'
};

const gradientClass = categoryColors[category] || 'from-gray-500 to-slate-600';

// Images avec fallback AI → SVG
const aiImageUrl = `/images/thumbnails/${slug}-illus.jpg`;
const svgImageUrl = `/images/thumbnails/${slug}.svg`;
---

<article class="group relative bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-100 hover:border-gray-200">
  <!-- Image avec fallback -->
  <div class="relative h-48 overflow-hidden">
    <div class={`absolute inset-0 bg-gradient-to-br ${gradientClass} opacity-10`}></div>
    <img 
      src={aiImageUrl}
      alt={title}
      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
      loading="lazy"
      onerror={`this.onerror=null; this.src='${svgImageUrl}';`}
    />
    
    <!-- Badge catégorie -->
    <div class="absolute top-3 left-3">
      <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-white bg-gradient-to-r ${gradientClass} shadow-lg`}>
        {category.replace(/-/g, ' ').replace(/glp1/gi, 'GLP-1').toUpperCase()}
      </span>
    </div>
  </div>

  <!-- Contenu -->
  <div class="p-6">
    <h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors duration-300 line-clamp-2">
      {title}
    </h3>
    
    <p class="text-gray-600 text-sm mb-4 line-clamp-3">
      {description}
    </p>
    
    <!-- Lien -->
    <a 
      href={url}
      class="inline-flex items-center justify-center w-full px-4 py-2 text-sm font-medium text-white bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg hover:from-blue-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-300 group-hover:shadow-lg"
    >
      Lire l'article
      <svg class="ml-2 w-4 h-4 group-hover:translate-x-1 transition-transform duration-300" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
      </svg>
    </a>
  </div>
</article>

<style>
.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

.line-clamp-3 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}
</style>